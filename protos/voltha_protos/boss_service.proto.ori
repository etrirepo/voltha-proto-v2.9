syntax = "proto3";

option go_package = "github.com/opencord/voltha-protos/v5/go/adapter_service";
option java_package = "org.opencord.voltha.adapter_service";
option java_outer_classname = "VolthaAdapterService";

package adapter_service;

import "voltha_protos/adapter_service.proto";
import "google/protobuf/empty.proto";
//import "voltha_protos/common.proto";
//import "voltha_protos/core_adapter.proto";
import "voltha_protos/device.proto";
//import "voltha_protos/extensions.proto";
//import "voltha_protos/health.proto";
//import "voltha_protos/voltha.proto";
//import "voltha_protos/omci_test.proto";
//import "voltha_protos/events.proto";
import "voltha_protos/bossopenolt.proto";

// AdapterService is a gRPC service to serve requests from Voltha RW_Core.
service BossService {
	rpc getCustomVlan(bossopenolt.boss_request) returns(bossopenolt.GetVlanResponse);
	rpc GetOltConnect(bossopenolt.boss_request) returns(bossopenolt.OltConnResponse);
	rpc GetOltDeviceInfo(bossopenolt.boss_request) returns(bossopenolt.OltDevResponse);
	rpc SetPmdTxDis(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetPmdTxdis(bossopenolt.boss_request) returns(bossopenolt.PmdTxdisResponse);
	rpc GetDevicePmdStatus(bossopenolt.boss_request) returns(bossopenolt.PmdStatusResponse);
	rpc SetDevicePort(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetDevicePort(bossopenolt.boss_request) returns(bossopenolt.GetPortResponse);
	rpc PortReset(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc SetMtuSize(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetMtuSize(bossopenolt.boss_request) returns(bossopenolt.MtuSizeResponse);
	rpc SetVlan(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc SetLutMode(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetLutMode(bossopenolt.boss_request) returns(bossopenolt.ModeResponse);
	rpc SetAgingMode(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetAgingMode(bossopenolt.boss_request) returns(bossopenolt.ModeResponse);
	rpc SetAgingTime(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetAgingTime(bossopenolt.boss_request) returns(bossopenolt.AgingTimeResponse);
	rpc GetDeviceMacInfo(bossopenolt.boss_request) returns(bossopenolt.DevMacInfoResponse);
	rpc SetSdnTable(bossopenolt.boss_request) returns(bossopenolt.SdnTableKeyResponse);
	rpc GetSdnTable(bossopenolt.boss_request) returns(bossopenolt.SdnTableResponse);
	rpc SetLength(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetLength(bossopenolt.boss_request) returns(bossopenolt.LengthResponse);
	rpc SetQuietZone(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetQuietZone(bossopenolt.boss_request) returns(bossopenolt.QuietZoneResponse);
	rpc SetFecMode(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetFecMode(bossopenolt.boss_request) returns(bossopenolt.ModeResponse);
	rpc AddOnu(bossopenolt.boss_request) returns(bossopenolt.AddOnuResponse);
	rpc DeleteOnu25G(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc AddOnuSla(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc ClearOnuSla(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetSlaTable(bossopenolt.boss_request) returns(bossopenolt.RepeatedSlaResponse);
	rpc SetOnuAllocid(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc DelOnuAllocid(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc SetOnuVssn(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetOnuVssn(bossopenolt.boss_request) returns(bossopenolt.OnuVssnResponse);
	rpc GetOnuDistance(bossopenolt.boss_request) returns(bossopenolt.OnuDistResponse);
	rpc SetBurstDelimiter(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetBurstDelimiter(bossopenolt.boss_request) returns(bossopenolt.BurstDelimitResponse);
	rpc SetBurstPreamble(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetBurstPreamble(bossopenolt.boss_request) returns(bossopenolt.BurstPreambleResponse);
	rpc SetBurstVersion(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetBurstVersion(bossopenolt.boss_request) returns(bossopenolt.BurstVersionResponse);
	rpc SetBurstProfile(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetBurstProfile(bossopenolt.boss_request) returns(bossopenolt.BurstProfileResponse);
	rpc GetRegisterStatus(bossopenolt.boss_request) returns(bossopenolt.RegisterStatusResponse);
	rpc GetOnuInfo(bossopenolt.boss_request) returns(bossopenolt.OnuInfoResponse);
	rpc GetOmciStatus(bossopenolt.boss_request) returns(bossopenolt.StatusResponse);
	rpc SetDsOmciOnu(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc SetDsOmciData(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetUsOmciData(bossopenolt.boss_request) returns(bossopenolt.OmciDataResponse);
	rpc SetTod(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetTod(bossopenolt.boss_request) returns(bossopenolt.TodResponse);
	rpc SetDataMode(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetDataMode(bossopenolt.boss_request) returns(bossopenolt.ModeResponse);
	rpc SetFecDecMode(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetFecDecMode(bossopenolt.boss_request) returns(bossopenolt.ModeResponse);
	rpc SetDelimiter(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetDelimiter(bossopenolt.boss_request) returns(bossopenolt.FecDecResponse);
	rpc SetErrorPermit(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetErrorPermit(bossopenolt.boss_request) returns(bossopenolt.ErrorPermitResponse);
	rpc SetPmControl(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetPmControl(bossopenolt.boss_request) returns(bossopenolt.PmControlResponse);
	rpc GetPmTable(bossopenolt.boss_request) returns(bossopenolt.PmTableResponse);
	rpc SetSAOn(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc SetSAOff(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc Create_device_handler(device.Device) returns (google.protobuf.Empty);
	rpc SetSliceBw(bossopenolt.boss_request) returns(bossopenolt.ExecResult);
	rpc GetSliceBw(bossopenolt.boss_request) returns(bossopenolt.GetSliceBwResponse);
	rpc SetSlaV2(bossopenolt.boss_request) returns(bossopenolt.SlaV2Response);
	rpc GetSlaV2(bossopenolt.boss_request) returns(bossopenolt.SlaV2Response);
	rpc SendOmciData(bossopenolt.boss_request) returns(bossopenolt.BossOmciResponse);
}
