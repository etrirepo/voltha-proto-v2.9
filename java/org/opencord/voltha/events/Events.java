// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voltha_protos/events.proto

package org.opencord.voltha.events;

public final class Events {
  private Events() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EventFilterRuleKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventFilterRuleKey)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code event.EventFilterRuleKey}
   */
  public  static final class EventFilterRuleKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventFilterRuleKey)
      EventFilterRuleKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventFilterRuleKey.newBuilder() to construct.
    private EventFilterRuleKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventFilterRuleKey() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventFilterRuleKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilterRuleKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilterRuleKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventFilterRuleKey.class, org.opencord.voltha.events.Events.EventFilterRuleKey.Builder.class);
    }

    /**
     * Protobuf enum {@code event.EventFilterRuleKey.EventFilterRuleType}
     */
    public enum EventFilterRuleType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>filter_all = 0;</code>
       */
      filter_all(0),
      /**
       * <code>category = 1;</code>
       */
      category(1),
      /**
       * <code>sub_category = 2;</code>
       */
      sub_category(2),
      /**
       * <code>kpi_event_type = 3;</code>
       */
      kpi_event_type(3),
      /**
       * <code>config_event_type = 4;</code>
       */
      config_event_type(4),
      /**
       * <code>device_event_type = 5;</code>
       */
      device_event_type(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>filter_all = 0;</code>
       */
      public static final int filter_all_VALUE = 0;
      /**
       * <code>category = 1;</code>
       */
      public static final int category_VALUE = 1;
      /**
       * <code>sub_category = 2;</code>
       */
      public static final int sub_category_VALUE = 2;
      /**
       * <code>kpi_event_type = 3;</code>
       */
      public static final int kpi_event_type_VALUE = 3;
      /**
       * <code>config_event_type = 4;</code>
       */
      public static final int config_event_type_VALUE = 4;
      /**
       * <code>device_event_type = 5;</code>
       */
      public static final int device_event_type_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventFilterRuleType valueOf(int value) {
        return forNumber(value);
      }

      public static EventFilterRuleType forNumber(int value) {
        switch (value) {
          case 0: return filter_all;
          case 1: return category;
          case 2: return sub_category;
          case 3: return kpi_event_type;
          case 4: return config_event_type;
          case 5: return device_event_type;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EventFilterRuleType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EventFilterRuleType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EventFilterRuleType>() {
              public EventFilterRuleType findValueByNumber(int number) {
                return EventFilterRuleType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.EventFilterRuleKey.getDescriptor().getEnumTypes().get(0);
      }

      private static final EventFilterRuleType[] VALUES = values();

      public static EventFilterRuleType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EventFilterRuleType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:event.EventFilterRuleKey.EventFilterRuleType)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventFilterRuleKey)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventFilterRuleKey other = (org.opencord.voltha.events.Events.EventFilterRuleKey) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilterRuleKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventFilterRuleKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.EventFilterRuleKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventFilterRuleKey)
        org.opencord.voltha.events.Events.EventFilterRuleKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilterRuleKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilterRuleKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventFilterRuleKey.class, org.opencord.voltha.events.Events.EventFilterRuleKey.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventFilterRuleKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilterRuleKey_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilterRuleKey getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventFilterRuleKey.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilterRuleKey build() {
        org.opencord.voltha.events.Events.EventFilterRuleKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilterRuleKey buildPartial() {
        org.opencord.voltha.events.Events.EventFilterRuleKey result = new org.opencord.voltha.events.Events.EventFilterRuleKey(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventFilterRuleKey) {
          return mergeFrom((org.opencord.voltha.events.Events.EventFilterRuleKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventFilterRuleKey other) {
        if (other == org.opencord.voltha.events.Events.EventFilterRuleKey.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventFilterRuleKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventFilterRuleKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventFilterRuleKey)
    }

    // @@protoc_insertion_point(class_scope:event.EventFilterRuleKey)
    private static final org.opencord.voltha.events.Events.EventFilterRuleKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventFilterRuleKey();
    }

    public static org.opencord.voltha.events.Events.EventFilterRuleKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventFilterRuleKey>
        PARSER = new com.google.protobuf.AbstractParser<EventFilterRuleKey>() {
      @java.lang.Override
      public EventFilterRuleKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventFilterRuleKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventFilterRuleKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventFilterRuleKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventFilterRuleKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventFilterRuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventFilterRule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
     */
    int getKeyValue();
    /**
     * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
     */
    org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType getKey();

    /**
     * <code>string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code event.EventFilterRule}
   */
  public  static final class EventFilterRule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventFilterRule)
      EventFilterRuleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventFilterRule.newBuilder() to construct.
    private EventFilterRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventFilterRule() {
      key_ = 0;
      value_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventFilterRule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              key_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilterRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilterRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventFilterRule.class, org.opencord.voltha.events.Events.EventFilterRule.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private int key_;
    /**
     * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
     */
    public int getKeyValue() {
      return key_;
    }
    /**
     * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
     */
    public org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType getKey() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType result = org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType.valueOf(key_);
      return result == null ? org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType.filter_all.getNumber()) {
        output.writeEnum(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType.filter_all.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventFilterRule)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventFilterRule other = (org.opencord.voltha.events.Events.EventFilterRule) obj;

      if (key_ != other.key_) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + key_;
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilterRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventFilterRule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.EventFilterRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventFilterRule)
        org.opencord.voltha.events.Events.EventFilterRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilterRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilterRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventFilterRule.class, org.opencord.voltha.events.Events.EventFilterRule.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventFilterRule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = 0;

        value_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilterRule_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilterRule getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventFilterRule.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilterRule build() {
        org.opencord.voltha.events.Events.EventFilterRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilterRule buildPartial() {
        org.opencord.voltha.events.Events.EventFilterRule result = new org.opencord.voltha.events.Events.EventFilterRule(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventFilterRule) {
          return mergeFrom((org.opencord.voltha.events.Events.EventFilterRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventFilterRule other) {
        if (other == org.opencord.voltha.events.Events.EventFilterRule.getDefaultInstance()) return this;
        if (other.key_ != 0) {
          setKeyValue(other.getKeyValue());
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventFilterRule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventFilterRule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int key_ = 0;
      /**
       * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
       */
      public int getKeyValue() {
        return key_;
      }
      /**
       * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
       */
      public Builder setKeyValue(int value) {
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType getKey() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType result = org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType.valueOf(key_);
        return result == null ? org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType.UNRECOGNIZED : result;
      }
      /**
       * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
       */
      public Builder setKey(org.opencord.voltha.events.Events.EventFilterRuleKey.EventFilterRuleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        key_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.event.EventFilterRuleKey.EventFilterRuleType key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventFilterRule)
    }

    // @@protoc_insertion_point(class_scope:event.EventFilterRule)
    private static final org.opencord.voltha.events.Events.EventFilterRule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventFilterRule();
    }

    public static org.opencord.voltha.events.Events.EventFilterRule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventFilterRule>
        PARSER = new com.google.protobuf.AbstractParser<EventFilterRule>() {
      @java.lang.Override
      public EventFilterRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventFilterRule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventFilterRule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventFilterRule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventFilterRule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>bool enable = 2;</code>
     */
    boolean getEnable();

    /**
     * <code>string device_id = 3;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>string device_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <code>string event_type = 4;</code>
     */
    java.lang.String getEventType();
    /**
     * <code>string event_type = 4;</code>
     */
    com.google.protobuf.ByteString
        getEventTypeBytes();

    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    java.util.List<org.opencord.voltha.events.Events.EventFilterRule> 
        getRulesList();
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    org.opencord.voltha.events.Events.EventFilterRule getRules(int index);
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    int getRulesCount();
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    java.util.List<? extends org.opencord.voltha.events.Events.EventFilterRuleOrBuilder> 
        getRulesOrBuilderList();
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    org.opencord.voltha.events.Events.EventFilterRuleOrBuilder getRulesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code event.EventFilter}
   */
  public  static final class EventFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventFilter)
      EventFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventFilter.newBuilder() to construct.
    private EventFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventFilter() {
      id_ = "";
      deviceId_ = "";
      eventType_ = "";
      rules_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              enable_ = input.readBool();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              eventType_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                rules_ = new java.util.ArrayList<org.opencord.voltha.events.Events.EventFilterRule>();
                mutable_bitField0_ |= 0x00000010;
              }
              rules_.add(
                  input.readMessage(org.opencord.voltha.events.Events.EventFilterRule.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          rules_ = java.util.Collections.unmodifiableList(rules_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventFilter.class, org.opencord.voltha.events.Events.EventFilter.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENABLE_FIELD_NUMBER = 2;
    private boolean enable_;
    /**
     * <code>bool enable = 2;</code>
     */
    public boolean getEnable() {
      return enable_;
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object deviceId_;
    /**
     * <code>string device_id = 3;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <code>string device_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object eventType_;
    /**
     * <code>string event_type = 4;</code>
     */
    public java.lang.String getEventType() {
      java.lang.Object ref = eventType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        eventType_ = s;
        return s;
      }
    }
    /**
     * <code>string event_type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEventTypeBytes() {
      java.lang.Object ref = eventType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RULES_FIELD_NUMBER = 5;
    private java.util.List<org.opencord.voltha.events.Events.EventFilterRule> rules_;
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    public java.util.List<org.opencord.voltha.events.Events.EventFilterRule> getRulesList() {
      return rules_;
    }
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    public java.util.List<? extends org.opencord.voltha.events.Events.EventFilterRuleOrBuilder> 
        getRulesOrBuilderList() {
      return rules_;
    }
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    public int getRulesCount() {
      return rules_.size();
    }
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    public org.opencord.voltha.events.Events.EventFilterRule getRules(int index) {
      return rules_.get(index);
    }
    /**
     * <code>repeated .event.EventFilterRule rules = 5;</code>
     */
    public org.opencord.voltha.events.Events.EventFilterRuleOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (enable_ != false) {
        output.writeBool(2, enable_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, deviceId_);
      }
      if (!getEventTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, eventType_);
      }
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(5, rules_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (enable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, enable_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, deviceId_);
      }
      if (!getEventTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, eventType_);
      }
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, rules_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventFilter)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventFilter other = (org.opencord.voltha.events.Events.EventFilter) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (getEnable()
          != other.getEnable()) return false;
      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (!getEventType()
          .equals(other.getEventType())) return false;
      if (!getRulesList()
          .equals(other.getRulesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + ENABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnable());
      hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEventType().hashCode();
      if (getRulesCount() > 0) {
        hash = (37 * hash) + RULES_FIELD_NUMBER;
        hash = (53 * hash) + getRulesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.EventFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventFilter)
        org.opencord.voltha.events.Events.EventFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventFilter.class, org.opencord.voltha.events.Events.EventFilter.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRulesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        enable_ = false;

        deviceId_ = "";

        eventType_ = "";

        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilter_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilter getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventFilter.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilter build() {
        org.opencord.voltha.events.Events.EventFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilter buildPartial() {
        org.opencord.voltha.events.Events.EventFilter result = new org.opencord.voltha.events.Events.EventFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.enable_ = enable_;
        result.deviceId_ = deviceId_;
        result.eventType_ = eventType_;
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventFilter) {
          return mergeFrom((org.opencord.voltha.events.Events.EventFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventFilter other) {
        if (other == org.opencord.voltha.events.Events.EventFilter.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getEnable() != false) {
          setEnable(other.getEnable());
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (!other.getEventType().isEmpty()) {
          eventType_ = other.eventType_;
          onChanged();
        }
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000010);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private boolean enable_ ;
      /**
       * <code>bool enable = 2;</code>
       */
      public boolean getEnable() {
        return enable_;
      }
      /**
       * <code>bool enable = 2;</code>
       */
      public Builder setEnable(boolean value) {
        
        enable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enable = 2;</code>
       */
      public Builder clearEnable() {
        
        enable_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object deviceId_ = "";
      /**
       * <code>string device_id = 3;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>string device_id = 3;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object eventType_ = "";
      /**
       * <code>string event_type = 4;</code>
       */
      public java.lang.String getEventType() {
        java.lang.Object ref = eventType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          eventType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string event_type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getEventTypeBytes() {
        java.lang.Object ref = eventType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string event_type = 4;</code>
       */
      public Builder setEventType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string event_type = 4;</code>
       */
      public Builder clearEventType() {
        
        eventType_ = getDefaultInstance().getEventType();
        onChanged();
        return this;
      }
      /**
       * <code>string event_type = 4;</code>
       */
      public Builder setEventTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        eventType_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.events.Events.EventFilterRule> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          rules_ = new java.util.ArrayList<org.opencord.voltha.events.Events.EventFilterRule>(rules_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.events.Events.EventFilterRule, org.opencord.voltha.events.Events.EventFilterRule.Builder, org.opencord.voltha.events.Events.EventFilterRuleOrBuilder> rulesBuilder_;

      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public java.util.List<org.opencord.voltha.events.Events.EventFilterRule> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterRule getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder setRules(
          int index, org.opencord.voltha.events.Events.EventFilterRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder setRules(
          int index, org.opencord.voltha.events.Events.EventFilterRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder addRules(org.opencord.voltha.events.Events.EventFilterRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder addRules(
          int index, org.opencord.voltha.events.Events.EventFilterRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder addRules(
          org.opencord.voltha.events.Events.EventFilterRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder addRules(
          int index, org.opencord.voltha.events.Events.EventFilterRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder addAllRules(
          java.lang.Iterable<? extends org.opencord.voltha.events.Events.EventFilterRule> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterRule.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterRuleOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public java.util.List<? extends org.opencord.voltha.events.Events.EventFilterRuleOrBuilder> 
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterRule.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            org.opencord.voltha.events.Events.EventFilterRule.getDefaultInstance());
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterRule.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, org.opencord.voltha.events.Events.EventFilterRule.getDefaultInstance());
      }
      /**
       * <code>repeated .event.EventFilterRule rules = 5;</code>
       */
      public java.util.List<org.opencord.voltha.events.Events.EventFilterRule.Builder> 
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.events.Events.EventFilterRule, org.opencord.voltha.events.Events.EventFilterRule.Builder, org.opencord.voltha.events.Events.EventFilterRuleOrBuilder> 
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.events.Events.EventFilterRule, org.opencord.voltha.events.Events.EventFilterRule.Builder, org.opencord.voltha.events.Events.EventFilterRuleOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventFilter)
    }

    // @@protoc_insertion_point(class_scope:event.EventFilter)
    private static final org.opencord.voltha.events.Events.EventFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventFilter();
    }

    public static org.opencord.voltha.events.Events.EventFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventFilter>
        PARSER = new com.google.protobuf.AbstractParser<EventFilter>() {
      @java.lang.Override
      public EventFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventFilter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventFiltersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventFilters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    java.util.List<org.opencord.voltha.events.Events.EventFilter> 
        getFiltersList();
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    org.opencord.voltha.events.Events.EventFilter getFilters(int index);
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    int getFiltersCount();
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    java.util.List<? extends org.opencord.voltha.events.Events.EventFilterOrBuilder> 
        getFiltersOrBuilderList();
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    org.opencord.voltha.events.Events.EventFilterOrBuilder getFiltersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code event.EventFilters}
   */
  public  static final class EventFilters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventFilters)
      EventFiltersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventFilters.newBuilder() to construct.
    private EventFilters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventFilters() {
      filters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventFilters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                filters_ = new java.util.ArrayList<org.opencord.voltha.events.Events.EventFilter>();
                mutable_bitField0_ |= 0x00000001;
              }
              filters_.add(
                  input.readMessage(org.opencord.voltha.events.Events.EventFilter.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventFilters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventFilters.class, org.opencord.voltha.events.Events.EventFilters.Builder.class);
    }

    public static final int FILTERS_FIELD_NUMBER = 1;
    private java.util.List<org.opencord.voltha.events.Events.EventFilter> filters_;
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    public java.util.List<org.opencord.voltha.events.Events.EventFilter> getFiltersList() {
      return filters_;
    }
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    public java.util.List<? extends org.opencord.voltha.events.Events.EventFilterOrBuilder> 
        getFiltersOrBuilderList() {
      return filters_;
    }
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    public int getFiltersCount() {
      return filters_.size();
    }
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    public org.opencord.voltha.events.Events.EventFilter getFilters(int index) {
      return filters_.get(index);
    }
    /**
     * <code>repeated .event.EventFilter filters = 1;</code>
     */
    public org.opencord.voltha.events.Events.EventFilterOrBuilder getFiltersOrBuilder(
        int index) {
      return filters_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < filters_.size(); i++) {
        output.writeMessage(1, filters_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < filters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, filters_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventFilters)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventFilters other = (org.opencord.voltha.events.Events.EventFilters) obj;

      if (!getFiltersList()
          .equals(other.getFiltersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFiltersCount() > 0) {
        hash = (37 * hash) + FILTERS_FIELD_NUMBER;
        hash = (53 * hash) + getFiltersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventFilters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventFilters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.EventFilters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventFilters)
        org.opencord.voltha.events.Events.EventFiltersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventFilters.class, org.opencord.voltha.events.Events.EventFilters.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventFilters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFiltersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (filtersBuilder_ == null) {
          filters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          filtersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventFilters_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilters getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventFilters.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilters build() {
        org.opencord.voltha.events.Events.EventFilters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventFilters buildPartial() {
        org.opencord.voltha.events.Events.EventFilters result = new org.opencord.voltha.events.Events.EventFilters(this);
        int from_bitField0_ = bitField0_;
        if (filtersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            filters_ = java.util.Collections.unmodifiableList(filters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.filters_ = filters_;
        } else {
          result.filters_ = filtersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventFilters) {
          return mergeFrom((org.opencord.voltha.events.Events.EventFilters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventFilters other) {
        if (other == org.opencord.voltha.events.Events.EventFilters.getDefaultInstance()) return this;
        if (filtersBuilder_ == null) {
          if (!other.filters_.isEmpty()) {
            if (filters_.isEmpty()) {
              filters_ = other.filters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFiltersIsMutable();
              filters_.addAll(other.filters_);
            }
            onChanged();
          }
        } else {
          if (!other.filters_.isEmpty()) {
            if (filtersBuilder_.isEmpty()) {
              filtersBuilder_.dispose();
              filtersBuilder_ = null;
              filters_ = other.filters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              filtersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFiltersFieldBuilder() : null;
            } else {
              filtersBuilder_.addAllMessages(other.filters_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventFilters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventFilters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.opencord.voltha.events.Events.EventFilter> filters_ =
        java.util.Collections.emptyList();
      private void ensureFiltersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          filters_ = new java.util.ArrayList<org.opencord.voltha.events.Events.EventFilter>(filters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.events.Events.EventFilter, org.opencord.voltha.events.Events.EventFilter.Builder, org.opencord.voltha.events.Events.EventFilterOrBuilder> filtersBuilder_;

      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public java.util.List<org.opencord.voltha.events.Events.EventFilter> getFiltersList() {
        if (filtersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(filters_);
        } else {
          return filtersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public int getFiltersCount() {
        if (filtersBuilder_ == null) {
          return filters_.size();
        } else {
          return filtersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventFilter getFilters(int index) {
        if (filtersBuilder_ == null) {
          return filters_.get(index);
        } else {
          return filtersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder setFilters(
          int index, org.opencord.voltha.events.Events.EventFilter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.set(index, value);
          onChanged();
        } else {
          filtersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder setFilters(
          int index, org.opencord.voltha.events.Events.EventFilter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.set(index, builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder addFilters(org.opencord.voltha.events.Events.EventFilter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.add(value);
          onChanged();
        } else {
          filtersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder addFilters(
          int index, org.opencord.voltha.events.Events.EventFilter value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiltersIsMutable();
          filters_.add(index, value);
          onChanged();
        } else {
          filtersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder addFilters(
          org.opencord.voltha.events.Events.EventFilter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.add(builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder addFilters(
          int index, org.opencord.voltha.events.Events.EventFilter.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.add(index, builderForValue.build());
          onChanged();
        } else {
          filtersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder addAllFilters(
          java.lang.Iterable<? extends org.opencord.voltha.events.Events.EventFilter> values) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, filters_);
          onChanged();
        } else {
          filtersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder clearFilters() {
        if (filtersBuilder_ == null) {
          filters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          filtersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public Builder removeFilters(int index) {
        if (filtersBuilder_ == null) {
          ensureFiltersIsMutable();
          filters_.remove(index);
          onChanged();
        } else {
          filtersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventFilter.Builder getFiltersBuilder(
          int index) {
        return getFiltersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventFilterOrBuilder getFiltersOrBuilder(
          int index) {
        if (filtersBuilder_ == null) {
          return filters_.get(index);  } else {
          return filtersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public java.util.List<? extends org.opencord.voltha.events.Events.EventFilterOrBuilder> 
           getFiltersOrBuilderList() {
        if (filtersBuilder_ != null) {
          return filtersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(filters_);
        }
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventFilter.Builder addFiltersBuilder() {
        return getFiltersFieldBuilder().addBuilder(
            org.opencord.voltha.events.Events.EventFilter.getDefaultInstance());
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventFilter.Builder addFiltersBuilder(
          int index) {
        return getFiltersFieldBuilder().addBuilder(
            index, org.opencord.voltha.events.Events.EventFilter.getDefaultInstance());
      }
      /**
       * <code>repeated .event.EventFilter filters = 1;</code>
       */
      public java.util.List<org.opencord.voltha.events.Events.EventFilter.Builder> 
           getFiltersBuilderList() {
        return getFiltersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.events.Events.EventFilter, org.opencord.voltha.events.Events.EventFilter.Builder, org.opencord.voltha.events.Events.EventFilterOrBuilder> 
          getFiltersFieldBuilder() {
        if (filtersBuilder_ == null) {
          filtersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.events.Events.EventFilter, org.opencord.voltha.events.Events.EventFilter.Builder, org.opencord.voltha.events.Events.EventFilterOrBuilder>(
                  filters_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          filters_ = null;
        }
        return filtersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventFilters)
    }

    // @@protoc_insertion_point(class_scope:event.EventFilters)
    private static final org.opencord.voltha.events.Events.EventFilters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventFilters();
    }

    public static org.opencord.voltha.events.Events.EventFilters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventFilters>
        PARSER = new com.google.protobuf.AbstractParser<EventFilters>() {
      @java.lang.Override
      public EventFilters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventFilters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventFilters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventFilters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventFilters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigEventTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.ConfigEventType)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code event.ConfigEventType}
   */
  public  static final class ConfigEventType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.ConfigEventType)
      ConfigEventTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfigEventType.newBuilder() to construct.
    private ConfigEventType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfigEventType() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfigEventType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_ConfigEventType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_ConfigEventType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.ConfigEventType.class, org.opencord.voltha.events.Events.ConfigEventType.Builder.class);
    }

    /**
     * Protobuf enum {@code event.ConfigEventType.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A new config has been added
       * </pre>
       *
       * <code>add = 0;</code>
       */
      add(0),
      /**
       * <pre>
       * A config has been removed
       * </pre>
       *
       * <code>remove = 1;</code>
       */
      remove(1),
      /**
       * <pre>
       * A config has been updated
       * </pre>
       *
       * <code>update = 2;</code>
       */
      update(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A new config has been added
       * </pre>
       *
       * <code>add = 0;</code>
       */
      public static final int add_VALUE = 0;
      /**
       * <pre>
       * A config has been removed
       * </pre>
       *
       * <code>remove = 1;</code>
       */
      public static final int remove_VALUE = 1;
      /**
       * <pre>
       * A config has been updated
       * </pre>
       *
       * <code>update = 2;</code>
       */
      public static final int update_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Types valueOf(int value) {
        return forNumber(value);
      }

      public static Types forNumber(int value) {
        switch (value) {
          case 0: return add;
          case 1: return remove;
          case 2: return update;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Types> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.ConfigEventType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Types[] VALUES = values();

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Types(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:event.ConfigEventType.Types)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.ConfigEventType)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.ConfigEventType other = (org.opencord.voltha.events.Events.ConfigEventType) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.ConfigEventType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.ConfigEventType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.ConfigEventType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.ConfigEventType)
        org.opencord.voltha.events.Events.ConfigEventTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_ConfigEventType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_ConfigEventType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.ConfigEventType.class, org.opencord.voltha.events.Events.ConfigEventType.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.ConfigEventType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_ConfigEventType_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.ConfigEventType getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.ConfigEventType.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.ConfigEventType build() {
        org.opencord.voltha.events.Events.ConfigEventType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.ConfigEventType buildPartial() {
        org.opencord.voltha.events.Events.ConfigEventType result = new org.opencord.voltha.events.Events.ConfigEventType(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.ConfigEventType) {
          return mergeFrom((org.opencord.voltha.events.Events.ConfigEventType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.ConfigEventType other) {
        if (other == org.opencord.voltha.events.Events.ConfigEventType.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.ConfigEventType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.ConfigEventType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.ConfigEventType)
    }

    // @@protoc_insertion_point(class_scope:event.ConfigEventType)
    private static final org.opencord.voltha.events.Events.ConfigEventType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.ConfigEventType();
    }

    public static org.opencord.voltha.events.Events.ConfigEventType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigEventType>
        PARSER = new com.google.protobuf.AbstractParser<ConfigEventType>() {
      @java.lang.Override
      public ConfigEventType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigEventType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfigEventType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigEventType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.ConfigEventType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.ConfigEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.event.ConfigEventType.Types type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.event.ConfigEventType.Types type = 1;</code>
     */
    org.opencord.voltha.events.Events.ConfigEventType.Types getType();

    /**
     * <pre>
     * hash for this change, can be used for quick lookup
     * </pre>
     *
     * <code>string hash = 2;</code>
     */
    java.lang.String getHash();
    /**
     * <pre>
     * hash for this change, can be used for quick lookup
     * </pre>
     *
     * <code>string hash = 2;</code>
     */
    com.google.protobuf.ByteString
        getHashBytes();

    /**
     * <pre>
     * the actual new data, in json format
     * </pre>
     *
     * <code>string data = 3;</code>
     */
    java.lang.String getData();
    /**
     * <pre>
     * the actual new data, in json format
     * </pre>
     *
     * <code>string data = 3;</code>
     */
    com.google.protobuf.ByteString
        getDataBytes();
  }
  /**
   * Protobuf type {@code event.ConfigEvent}
   */
  public  static final class ConfigEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.ConfigEvent)
      ConfigEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfigEvent.newBuilder() to construct.
    private ConfigEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfigEvent() {
      type_ = 0;
      hash_ = "";
      data_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfigEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              hash_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              data_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_ConfigEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_ConfigEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.ConfigEvent.class, org.opencord.voltha.events.Events.ConfigEvent.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.event.ConfigEventType.Types type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.event.ConfigEventType.Types type = 1;</code>
     */
    public org.opencord.voltha.events.Events.ConfigEventType.Types getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.ConfigEventType.Types result = org.opencord.voltha.events.Events.ConfigEventType.Types.valueOf(type_);
      return result == null ? org.opencord.voltha.events.Events.ConfigEventType.Types.UNRECOGNIZED : result;
    }

    public static final int HASH_FIELD_NUMBER = 2;
    private volatile java.lang.Object hash_;
    /**
     * <pre>
     * hash for this change, can be used for quick lookup
     * </pre>
     *
     * <code>string hash = 2;</code>
     */
    public java.lang.String getHash() {
      java.lang.Object ref = hash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hash_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * hash for this change, can be used for quick lookup
     * </pre>
     *
     * <code>string hash = 2;</code>
     */
    public com.google.protobuf.ByteString
        getHashBytes() {
      java.lang.Object ref = hash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private volatile java.lang.Object data_;
    /**
     * <pre>
     * the actual new data, in json format
     * </pre>
     *
     * <code>string data = 3;</code>
     */
    public java.lang.String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        data_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * the actual new data, in json format
     * </pre>
     *
     * <code>string data = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.events.Events.ConfigEventType.Types.add.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getHashBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hash_);
      }
      if (!getDataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.events.Events.ConfigEventType.Types.add.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!getHashBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hash_);
      }
      if (!getDataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.ConfigEvent)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.ConfigEvent other = (org.opencord.voltha.events.Events.ConfigEvent) obj;

      if (type_ != other.type_) return false;
      if (!getHash()
          .equals(other.getHash())) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.ConfigEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.ConfigEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.ConfigEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.ConfigEvent)
        org.opencord.voltha.events.Events.ConfigEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_ConfigEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_ConfigEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.ConfigEvent.class, org.opencord.voltha.events.Events.ConfigEvent.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.ConfigEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        hash_ = "";

        data_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_ConfigEvent_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.ConfigEvent getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.ConfigEvent build() {
        org.opencord.voltha.events.Events.ConfigEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.ConfigEvent buildPartial() {
        org.opencord.voltha.events.Events.ConfigEvent result = new org.opencord.voltha.events.Events.ConfigEvent(this);
        result.type_ = type_;
        result.hash_ = hash_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.ConfigEvent) {
          return mergeFrom((org.opencord.voltha.events.Events.ConfigEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.ConfigEvent other) {
        if (other == org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getHash().isEmpty()) {
          hash_ = other.hash_;
          onChanged();
        }
        if (!other.getData().isEmpty()) {
          data_ = other.data_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.ConfigEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.ConfigEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.event.ConfigEventType.Types type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.event.ConfigEventType.Types type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.event.ConfigEventType.Types type = 1;</code>
       */
      public org.opencord.voltha.events.Events.ConfigEventType.Types getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.ConfigEventType.Types result = org.opencord.voltha.events.Events.ConfigEventType.Types.valueOf(type_);
        return result == null ? org.opencord.voltha.events.Events.ConfigEventType.Types.UNRECOGNIZED : result;
      }
      /**
       * <code>.event.ConfigEventType.Types type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.events.Events.ConfigEventType.Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.event.ConfigEventType.Types type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hash_ = "";
      /**
       * <pre>
       * hash for this change, can be used for quick lookup
       * </pre>
       *
       * <code>string hash = 2;</code>
       */
      public java.lang.String getHash() {
        java.lang.Object ref = hash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * hash for this change, can be used for quick lookup
       * </pre>
       *
       * <code>string hash = 2;</code>
       */
      public com.google.protobuf.ByteString
          getHashBytes() {
        java.lang.Object ref = hash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * hash for this change, can be used for quick lookup
       * </pre>
       *
       * <code>string hash = 2;</code>
       */
      public Builder setHash(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash for this change, can be used for quick lookup
       * </pre>
       *
       * <code>string hash = 2;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash for this change, can be used for quick lookup
       * </pre>
       *
       * <code>string hash = 2;</code>
       */
      public Builder setHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hash_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object data_ = "";
      /**
       * <pre>
       * the actual new data, in json format
       * </pre>
       *
       * <code>string data = 3;</code>
       */
      public java.lang.String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * the actual new data, in json format
       * </pre>
       *
       * <code>string data = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        java.lang.Object ref = data_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          data_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * the actual new data, in json format
       * </pre>
       *
       * <code>string data = 3;</code>
       */
      public Builder setData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the actual new data, in json format
       * </pre>
       *
       * <code>string data = 3;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the actual new data, in json format
       * </pre>
       *
       * <code>string data = 3;</code>
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        data_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.ConfigEvent)
    }

    // @@protoc_insertion_point(class_scope:event.ConfigEvent)
    private static final org.opencord.voltha.events.Events.ConfigEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.ConfigEvent();
    }

    public static org.opencord.voltha.events.Events.ConfigEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigEvent>
        PARSER = new com.google.protobuf.AbstractParser<ConfigEvent>() {
      @java.lang.Override
      public ConfigEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfigEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.ConfigEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KpiEventTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.KpiEventType)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code event.KpiEventType}
   */
  public  static final class KpiEventType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.KpiEventType)
      KpiEventTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KpiEventType.newBuilder() to construct.
    private KpiEventType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KpiEventType() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KpiEventType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_KpiEventType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_KpiEventType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.KpiEventType.class, org.opencord.voltha.events.Events.KpiEventType.Builder.class);
    }

    /**
     * Protobuf enum {@code event.KpiEventType.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * slice: a set of path/metric data for same time-stamp
       * </pre>
       *
       * <code>slice = 0;</code>
       */
      slice(0),
      /**
       * <pre>
       * time-series: array of data for same metric
       * </pre>
       *
       * <code>ts = 1;</code>
       */
      ts(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * slice: a set of path/metric data for same time-stamp
       * </pre>
       *
       * <code>slice = 0;</code>
       */
      public static final int slice_VALUE = 0;
      /**
       * <pre>
       * time-series: array of data for same metric
       * </pre>
       *
       * <code>ts = 1;</code>
       */
      public static final int ts_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Types valueOf(int value) {
        return forNumber(value);
      }

      public static Types forNumber(int value) {
        switch (value) {
          case 0: return slice;
          case 1: return ts;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Types> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.KpiEventType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Types[] VALUES = values();

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Types(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:event.KpiEventType.Types)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.KpiEventType)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.KpiEventType other = (org.opencord.voltha.events.Events.KpiEventType) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEventType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.KpiEventType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.KpiEventType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.KpiEventType)
        org.opencord.voltha.events.Events.KpiEventTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEventType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEventType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.KpiEventType.class, org.opencord.voltha.events.Events.KpiEventType.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.KpiEventType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEventType_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEventType getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.KpiEventType.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEventType build() {
        org.opencord.voltha.events.Events.KpiEventType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEventType buildPartial() {
        org.opencord.voltha.events.Events.KpiEventType result = new org.opencord.voltha.events.Events.KpiEventType(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.KpiEventType) {
          return mergeFrom((org.opencord.voltha.events.Events.KpiEventType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.KpiEventType other) {
        if (other == org.opencord.voltha.events.Events.KpiEventType.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.KpiEventType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.KpiEventType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.KpiEventType)
    }

    // @@protoc_insertion_point(class_scope:event.KpiEventType)
    private static final org.opencord.voltha.events.Events.KpiEventType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.KpiEventType();
    }

    public static org.opencord.voltha.events.Events.KpiEventType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KpiEventType>
        PARSER = new com.google.protobuf.AbstractParser<KpiEventType>() {
      @java.lang.Override
      public KpiEventType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KpiEventType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KpiEventType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KpiEventType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.KpiEventType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetricMetaDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.MetricMetaData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Metric group or individual metric name
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * Metric group or individual metric name
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * UTC time-stamp of data (seconds since epoch) of
     * </pre>
     *
     * <code>double ts = 2;</code>
     */
    double getTs();

    /**
     * <pre>
     * The logical device ID of the VOLTHA
     * </pre>
     *
     * <code>string logical_device_id = 3;</code>
     */
    java.lang.String getLogicalDeviceId();
    /**
     * <pre>
     * The logical device ID of the VOLTHA
     * </pre>
     *
     * <code>string logical_device_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getLogicalDeviceIdBytes();

    /**
     * <pre>
     * (equivalent to the DPID that ONOS has
     * for the VOLTHA device without the
     *  'of:' prefix
     * </pre>
     *
     * <code>string serial_no = 4;</code>
     */
    java.lang.String getSerialNo();
    /**
     * <pre>
     * (equivalent to the DPID that ONOS has
     * for the VOLTHA device without the
     *  'of:' prefix
     * </pre>
     *
     * <code>string serial_no = 4;</code>
     */
    com.google.protobuf.ByteString
        getSerialNoBytes();

    /**
     * <pre>
     * The OLT, ONU, ... physical device ID
     * </pre>
     *
     * <code>string device_id = 5;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     * The OLT, ONU, ... physical device ID
     * </pre>
     *
     * <code>string device_id = 5;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    int getContextCount();
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    boolean containsContext(
        java.lang.String key);
    /**
     * Use {@link #getContextMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getContext();
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getContextMap();
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    java.lang.String getContextOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    java.lang.String getContextOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Transaction identifier used to match On
     * </pre>
     *
     * <code>string uuid = 7;</code>
     */
    java.lang.String getUuid();
    /**
     * <pre>
     * Transaction identifier used to match On
     * </pre>
     *
     * <code>string uuid = 7;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();
  }
  /**
   * <pre>
   * Struct to convey a dictionary of metric metadata.
   * </pre>
   *
   * Protobuf type {@code event.MetricMetaData}
   */
  public  static final class MetricMetaData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.MetricMetaData)
      MetricMetaDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MetricMetaData.newBuilder() to construct.
    private MetricMetaData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MetricMetaData() {
      title_ = "";
      logicalDeviceId_ = "";
      serialNo_ = "";
      deviceId_ = "";
      uuid_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MetricMetaData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 17: {

              ts_ = input.readDouble();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              logicalDeviceId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              serialNo_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                context_ = com.google.protobuf.MapField.newMapField(
                    ContextDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              context__ = input.readMessage(
                  ContextDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              context_.getMutableMap().put(
                  context__.getKey(), context__.getValue());
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              uuid_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_MetricMetaData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetContext();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_MetricMetaData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.MetricMetaData.class, org.opencord.voltha.events.Events.MetricMetaData.Builder.class);
    }

    private int bitField0_;
    public static final int TITLE_FIELD_NUMBER = 1;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * Metric group or individual metric name
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Metric group or individual metric name
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TS_FIELD_NUMBER = 2;
    private double ts_;
    /**
     * <pre>
     * UTC time-stamp of data (seconds since epoch) of
     * </pre>
     *
     * <code>double ts = 2;</code>
     */
    public double getTs() {
      return ts_;
    }

    public static final int LOGICAL_DEVICE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object logicalDeviceId_;
    /**
     * <pre>
     * The logical device ID of the VOLTHA
     * </pre>
     *
     * <code>string logical_device_id = 3;</code>
     */
    public java.lang.String getLogicalDeviceId() {
      java.lang.Object ref = logicalDeviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logicalDeviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The logical device ID of the VOLTHA
     * </pre>
     *
     * <code>string logical_device_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLogicalDeviceIdBytes() {
      java.lang.Object ref = logicalDeviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logicalDeviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIAL_NO_FIELD_NUMBER = 4;
    private volatile java.lang.Object serialNo_;
    /**
     * <pre>
     * (equivalent to the DPID that ONOS has
     * for the VOLTHA device without the
     *  'of:' prefix
     * </pre>
     *
     * <code>string serial_no = 4;</code>
     */
    public java.lang.String getSerialNo() {
      java.lang.Object ref = serialNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serialNo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (equivalent to the DPID that ONOS has
     * for the VOLTHA device without the
     *  'of:' prefix
     * </pre>
     *
     * <code>string serial_no = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNoBytes() {
      java.lang.Object ref = serialNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 5;
    private volatile java.lang.Object deviceId_;
    /**
     * <pre>
     * The OLT, ONU, ... physical device ID
     * </pre>
     *
     * <code>string device_id = 5;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The OLT, ONU, ... physical device ID
     * </pre>
     *
     * <code>string device_id = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTEXT_FIELD_NUMBER = 6;
    private static final class ContextDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.opencord.voltha.events.Events.internal_static_event_MetricMetaData_ContextEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> context_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetContext() {
      if (context_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContextDefaultEntryHolder.defaultEntry);
      }
      return context_;
    }

    public int getContextCount() {
      return internalGetContext().getMap().size();
    }
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    public boolean containsContext(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetContext().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContextMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getContext() {
      return getContextMap();
    }
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getContextMap() {
      return internalGetContext().getMap();
    }
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    public java.lang.String getContextOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContext().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Name value pairs that provide additional
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 6;</code>
     */

    public java.lang.String getContextOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContext().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UUID_FIELD_NUMBER = 7;
    private volatile java.lang.Object uuid_;
    /**
     * <pre>
     * Transaction identifier used to match On
     * </pre>
     *
     * <code>string uuid = 7;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Transaction identifier used to match On
     * </pre>
     *
     * <code>string uuid = 7;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, title_);
      }
      if (ts_ != 0D) {
        output.writeDouble(2, ts_);
      }
      if (!getLogicalDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, logicalDeviceId_);
      }
      if (!getSerialNoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serialNo_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, deviceId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetContext(),
          ContextDefaultEntryHolder.defaultEntry,
          6);
      if (!getUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, uuid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, title_);
      }
      if (ts_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, ts_);
      }
      if (!getLogicalDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, logicalDeviceId_);
      }
      if (!getSerialNoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serialNo_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, deviceId_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetContext().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        context__ = ContextDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, context__);
      }
      if (!getUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, uuid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.MetricMetaData)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.MetricMetaData other = (org.opencord.voltha.events.Events.MetricMetaData) obj;

      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (java.lang.Double.doubleToLongBits(getTs())
          != java.lang.Double.doubleToLongBits(
              other.getTs())) return false;
      if (!getLogicalDeviceId()
          .equals(other.getLogicalDeviceId())) return false;
      if (!getSerialNo()
          .equals(other.getSerialNo())) return false;
      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (!internalGetContext().equals(
          other.internalGetContext())) return false;
      if (!getUuid()
          .equals(other.getUuid())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + TS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTs()));
      hash = (37 * hash) + LOGICAL_DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLogicalDeviceId().hashCode();
      hash = (37 * hash) + SERIAL_NO_FIELD_NUMBER;
      hash = (53 * hash) + getSerialNo().hashCode();
      hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      if (!internalGetContext().getMap().isEmpty()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetContext().hashCode();
      }
      hash = (37 * hash) + UUID_FIELD_NUMBER;
      hash = (53 * hash) + getUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricMetaData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.MetricMetaData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Struct to convey a dictionary of metric metadata.
     * </pre>
     *
     * Protobuf type {@code event.MetricMetaData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.MetricMetaData)
        org.opencord.voltha.events.Events.MetricMetaDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricMetaData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetContext();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableContext();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricMetaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.MetricMetaData.class, org.opencord.voltha.events.Events.MetricMetaData.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.MetricMetaData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        title_ = "";

        ts_ = 0D;

        logicalDeviceId_ = "";

        serialNo_ = "";

        deviceId_ = "";

        internalGetMutableContext().clear();
        uuid_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricMetaData_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricMetaData getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.MetricMetaData.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricMetaData build() {
        org.opencord.voltha.events.Events.MetricMetaData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricMetaData buildPartial() {
        org.opencord.voltha.events.Events.MetricMetaData result = new org.opencord.voltha.events.Events.MetricMetaData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.title_ = title_;
        result.ts_ = ts_;
        result.logicalDeviceId_ = logicalDeviceId_;
        result.serialNo_ = serialNo_;
        result.deviceId_ = deviceId_;
        result.context_ = internalGetContext();
        result.context_.makeImmutable();
        result.uuid_ = uuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.MetricMetaData) {
          return mergeFrom((org.opencord.voltha.events.Events.MetricMetaData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.MetricMetaData other) {
        if (other == org.opencord.voltha.events.Events.MetricMetaData.getDefaultInstance()) return this;
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (other.getTs() != 0D) {
          setTs(other.getTs());
        }
        if (!other.getLogicalDeviceId().isEmpty()) {
          logicalDeviceId_ = other.logicalDeviceId_;
          onChanged();
        }
        if (!other.getSerialNo().isEmpty()) {
          serialNo_ = other.serialNo_;
          onChanged();
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        internalGetMutableContext().mergeFrom(
            other.internalGetContext());
        if (!other.getUuid().isEmpty()) {
          uuid_ = other.uuid_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.MetricMetaData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.MetricMetaData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * Metric group or individual metric name
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Metric group or individual metric name
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Metric group or individual metric name
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metric group or individual metric name
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metric group or individual metric name
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private double ts_ ;
      /**
       * <pre>
       * UTC time-stamp of data (seconds since epoch) of
       * </pre>
       *
       * <code>double ts = 2;</code>
       */
      public double getTs() {
        return ts_;
      }
      /**
       * <pre>
       * UTC time-stamp of data (seconds since epoch) of
       * </pre>
       *
       * <code>double ts = 2;</code>
       */
      public Builder setTs(double value) {
        
        ts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UTC time-stamp of data (seconds since epoch) of
       * </pre>
       *
       * <code>double ts = 2;</code>
       */
      public Builder clearTs() {
        
        ts_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object logicalDeviceId_ = "";
      /**
       * <pre>
       * The logical device ID of the VOLTHA
       * </pre>
       *
       * <code>string logical_device_id = 3;</code>
       */
      public java.lang.String getLogicalDeviceId() {
        java.lang.Object ref = logicalDeviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          logicalDeviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The logical device ID of the VOLTHA
       * </pre>
       *
       * <code>string logical_device_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLogicalDeviceIdBytes() {
        java.lang.Object ref = logicalDeviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          logicalDeviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The logical device ID of the VOLTHA
       * </pre>
       *
       * <code>string logical_device_id = 3;</code>
       */
      public Builder setLogicalDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        logicalDeviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The logical device ID of the VOLTHA
       * </pre>
       *
       * <code>string logical_device_id = 3;</code>
       */
      public Builder clearLogicalDeviceId() {
        
        logicalDeviceId_ = getDefaultInstance().getLogicalDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The logical device ID of the VOLTHA
       * </pre>
       *
       * <code>string logical_device_id = 3;</code>
       */
      public Builder setLogicalDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        logicalDeviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serialNo_ = "";
      /**
       * <pre>
       * (equivalent to the DPID that ONOS has
       * for the VOLTHA device without the
       *  'of:' prefix
       * </pre>
       *
       * <code>string serial_no = 4;</code>
       */
      public java.lang.String getSerialNo() {
        java.lang.Object ref = serialNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serialNo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (equivalent to the DPID that ONOS has
       * for the VOLTHA device without the
       *  'of:' prefix
       * </pre>
       *
       * <code>string serial_no = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSerialNoBytes() {
        java.lang.Object ref = serialNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (equivalent to the DPID that ONOS has
       * for the VOLTHA device without the
       *  'of:' prefix
       * </pre>
       *
       * <code>string serial_no = 4;</code>
       */
      public Builder setSerialNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serialNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (equivalent to the DPID that ONOS has
       * for the VOLTHA device without the
       *  'of:' prefix
       * </pre>
       *
       * <code>string serial_no = 4;</code>
       */
      public Builder clearSerialNo() {
        
        serialNo_ = getDefaultInstance().getSerialNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (equivalent to the DPID that ONOS has
       * for the VOLTHA device without the
       *  'of:' prefix
       * </pre>
       *
       * <code>string serial_no = 4;</code>
       */
      public Builder setSerialNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serialNo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object deviceId_ = "";
      /**
       * <pre>
       * The OLT, ONU, ... physical device ID
       * </pre>
       *
       * <code>string device_id = 5;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The OLT, ONU, ... physical device ID
       * </pre>
       *
       * <code>string device_id = 5;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The OLT, ONU, ... physical device ID
       * </pre>
       *
       * <code>string device_id = 5;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The OLT, ONU, ... physical device ID
       * </pre>
       *
       * <code>string device_id = 5;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The OLT, ONU, ... physical device ID
       * </pre>
       *
       * <code>string device_id = 5;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> context_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetContext() {
        if (context_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ContextDefaultEntryHolder.defaultEntry);
        }
        return context_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableContext() {
        onChanged();;
        if (context_ == null) {
          context_ = com.google.protobuf.MapField.newMapField(
              ContextDefaultEntryHolder.defaultEntry);
        }
        if (!context_.isMutable()) {
          context_ = context_.copy();
        }
        return context_;
      }

      public int getContextCount() {
        return internalGetContext().getMap().size();
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */

      public boolean containsContext(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetContext().getMap().containsKey(key);
      }
      /**
       * Use {@link #getContextMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getContext() {
        return getContextMap();
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getContextMap() {
        return internalGetContext().getMap();
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */

      public java.lang.String getContextOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetContext().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */

      public java.lang.String getContextOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetContext().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearContext() {
        internalGetMutableContext().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */

      public Builder removeContext(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableContext().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableContext() {
        return internalGetMutableContext().getMutableMap();
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */
      public Builder putContext(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableContext().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Name value pairs that provide additional
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 6;</code>
       */

      public Builder putAllContext(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableContext().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.lang.Object uuid_ = "";
      /**
       * <pre>
       * Transaction identifier used to match On
       * </pre>
       *
       * <code>string uuid = 7;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Transaction identifier used to match On
       * </pre>
       *
       * <code>string uuid = 7;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Transaction identifier used to match On
       * </pre>
       *
       * <code>string uuid = 7;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction identifier used to match On
       * </pre>
       *
       * <code>string uuid = 7;</code>
       */
      public Builder clearUuid() {
        
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction identifier used to match On
       * </pre>
       *
       * <code>string uuid = 7;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuid_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.MetricMetaData)
    }

    // @@protoc_insertion_point(class_scope:event.MetricMetaData)
    private static final org.opencord.voltha.events.Events.MetricMetaData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.MetricMetaData();
    }

    public static org.opencord.voltha.events.Events.MetricMetaData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MetricMetaData>
        PARSER = new com.google.protobuf.AbstractParser<MetricMetaData>() {
      @java.lang.Override
      public MetricMetaData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MetricMetaData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MetricMetaData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MetricMetaData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.MetricMetaData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetricValuePairsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.MetricValuePairs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */
    int getMetricsCount();
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */
    boolean containsMetrics(
        java.lang.String key);
    /**
     * Use {@link #getMetricsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getMetrics();
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getMetricsMap();
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */

    float getMetricsOrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */

    float getMetricsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Struct to convey a dictionary of metric-&gt;value pairs. Typically used in
   * pure shared-timestamp or shared-timestamp + shared object prefix situations.
   * </pre>
   *
   * Protobuf type {@code event.MetricValuePairs}
   */
  public  static final class MetricValuePairs extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.MetricValuePairs)
      MetricValuePairsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MetricValuePairs.newBuilder() to construct.
    private MetricValuePairs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MetricValuePairs() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MetricValuePairs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                metrics_ = com.google.protobuf.MapField.newMapField(
                    MetricsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              metrics__ = input.readMessage(
                  MetricsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metrics_.getMutableMap().put(
                  metrics__.getKey(), metrics__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_MetricValuePairs_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMetrics();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_MetricValuePairs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.MetricValuePairs.class, org.opencord.voltha.events.Events.MetricValuePairs.Builder.class);
    }

    public static final int METRICS_FIELD_NUMBER = 1;
    private static final class MetricsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  org.opencord.voltha.events.Events.internal_static_event_MetricValuePairs_MetricsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> metrics_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetMetrics() {
      if (metrics_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetricsDefaultEntryHolder.defaultEntry);
      }
      return metrics_;
    }

    public int getMetricsCount() {
      return internalGetMetrics().getMap().size();
    }
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */

    public boolean containsMetrics(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetrics().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetricsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getMetrics() {
      return getMetricsMap();
    }
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getMetricsMap() {
      return internalGetMetrics().getMap();
    }
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */

    public float getMetricsOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetMetrics().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Metric / value pairs.
     * </pre>
     *
     * <code>map&lt;string, float&gt; metrics = 1;</code>
     */

    public float getMetricsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetMetrics().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetrics(),
          MetricsDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetMetrics().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        metrics__ = MetricsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, metrics__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.MetricValuePairs)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.MetricValuePairs other = (org.opencord.voltha.events.Events.MetricValuePairs) obj;

      if (!internalGetMetrics().equals(
          other.internalGetMetrics())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMetrics().getMap().isEmpty()) {
        hash = (37 * hash) + METRICS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetrics().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricValuePairs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.MetricValuePairs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Struct to convey a dictionary of metric-&gt;value pairs. Typically used in
     * pure shared-timestamp or shared-timestamp + shared object prefix situations.
     * </pre>
     *
     * Protobuf type {@code event.MetricValuePairs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.MetricValuePairs)
        org.opencord.voltha.events.Events.MetricValuePairsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricValuePairs_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMetrics();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMetrics();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricValuePairs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.MetricValuePairs.class, org.opencord.voltha.events.Events.MetricValuePairs.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.MetricValuePairs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableMetrics().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricValuePairs_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricValuePairs getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.MetricValuePairs.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricValuePairs build() {
        org.opencord.voltha.events.Events.MetricValuePairs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricValuePairs buildPartial() {
        org.opencord.voltha.events.Events.MetricValuePairs result = new org.opencord.voltha.events.Events.MetricValuePairs(this);
        int from_bitField0_ = bitField0_;
        result.metrics_ = internalGetMetrics();
        result.metrics_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.MetricValuePairs) {
          return mergeFrom((org.opencord.voltha.events.Events.MetricValuePairs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.MetricValuePairs other) {
        if (other == org.opencord.voltha.events.Events.MetricValuePairs.getDefaultInstance()) return this;
        internalGetMutableMetrics().mergeFrom(
            other.internalGetMetrics());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.MetricValuePairs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.MetricValuePairs) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> metrics_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMetrics() {
        if (metrics_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetricsDefaultEntryHolder.defaultEntry);
        }
        return metrics_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableMetrics() {
        onChanged();;
        if (metrics_ == null) {
          metrics_ = com.google.protobuf.MapField.newMapField(
              MetricsDefaultEntryHolder.defaultEntry);
        }
        if (!metrics_.isMutable()) {
          metrics_ = metrics_.copy();
        }
        return metrics_;
      }

      public int getMetricsCount() {
        return internalGetMetrics().getMap().size();
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */

      public boolean containsMetrics(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetrics().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetricsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getMetrics() {
        return getMetricsMap();
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getMetricsMap() {
        return internalGetMetrics().getMap();
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */

      public float getMetricsOrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetMetrics().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */

      public float getMetricsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetMetrics().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetrics() {
        internalGetMutableMetrics().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */

      public Builder removeMetrics(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetrics().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableMetrics() {
        return internalGetMutableMetrics().getMutableMap();
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */
      public Builder putMetrics(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableMetrics().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Metric / value pairs.
       * </pre>
       *
       * <code>map&lt;string, float&gt; metrics = 1;</code>
       */

      public Builder putAllMetrics(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        internalGetMutableMetrics().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.MetricValuePairs)
    }

    // @@protoc_insertion_point(class_scope:event.MetricValuePairs)
    private static final org.opencord.voltha.events.Events.MetricValuePairs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.MetricValuePairs();
    }

    public static org.opencord.voltha.events.Events.MetricValuePairs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MetricValuePairs>
        PARSER = new com.google.protobuf.AbstractParser<MetricValuePairs>() {
      @java.lang.Override
      public MetricValuePairs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MetricValuePairs(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MetricValuePairs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MetricValuePairs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.MetricValuePairs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetricInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.MetricInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.event.MetricMetaData metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.event.MetricMetaData metadata = 1;</code>
     */
    org.opencord.voltha.events.Events.MetricMetaData getMetadata();
    /**
     * <code>.event.MetricMetaData metadata = 1;</code>
     */
    org.opencord.voltha.events.Events.MetricMetaDataOrBuilder getMetadataOrBuilder();

    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */
    int getMetricsCount();
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */
    boolean containsMetrics(
        java.lang.String key);
    /**
     * Use {@link #getMetricsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getMetrics();
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getMetricsMap();
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */

    float getMetricsOrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */

    float getMetricsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Struct to group metadata for a metric (or group of metrics) with the key-value
   * pairs of collected metrics
   * </pre>
   *
   * Protobuf type {@code event.MetricInformation}
   */
  public  static final class MetricInformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.MetricInformation)
      MetricInformationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MetricInformation.newBuilder() to construct.
    private MetricInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MetricInformation() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MetricInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.events.Events.MetricMetaData.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(org.opencord.voltha.events.Events.MetricMetaData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                metrics_ = com.google.protobuf.MapField.newMapField(
                    MetricsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              metrics__ = input.readMessage(
                  MetricsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metrics_.getMutableMap().put(
                  metrics__.getKey(), metrics__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_MetricInformation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMetrics();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_MetricInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.MetricInformation.class, org.opencord.voltha.events.Events.MetricInformation.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private org.opencord.voltha.events.Events.MetricMetaData metadata_;
    /**
     * <code>.event.MetricMetaData metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.event.MetricMetaData metadata = 1;</code>
     */
    public org.opencord.voltha.events.Events.MetricMetaData getMetadata() {
      return metadata_ == null ? org.opencord.voltha.events.Events.MetricMetaData.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.event.MetricMetaData metadata = 1;</code>
     */
    public org.opencord.voltha.events.Events.MetricMetaDataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int METRICS_FIELD_NUMBER = 2;
    private static final class MetricsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  org.opencord.voltha.events.Events.internal_static_event_MetricInformation_MetricsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> metrics_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetMetrics() {
      if (metrics_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetricsDefaultEntryHolder.defaultEntry);
      }
      return metrics_;
    }

    public int getMetricsCount() {
      return internalGetMetrics().getMap().size();
    }
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */

    public boolean containsMetrics(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetrics().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetricsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getMetrics() {
      return getMetricsMap();
    }
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getMetricsMap() {
      return internalGetMetrics().getMap();
    }
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */

    public float getMetricsOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetMetrics().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, float&gt; metrics = 2;</code>
     */

    public float getMetricsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetMetrics().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetrics(),
          MetricsDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetMetrics().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        metrics__ = MetricsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, metrics__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.MetricInformation)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.MetricInformation other = (org.opencord.voltha.events.Events.MetricInformation) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!internalGetMetrics().equals(
          other.internalGetMetrics())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (!internalGetMetrics().getMap().isEmpty()) {
        hash = (37 * hash) + METRICS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetrics().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.MetricInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.MetricInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Struct to group metadata for a metric (or group of metrics) with the key-value
     * pairs of collected metrics
     * </pre>
     *
     * Protobuf type {@code event.MetricInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.MetricInformation)
        org.opencord.voltha.events.Events.MetricInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMetrics();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableMetrics();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.MetricInformation.class, org.opencord.voltha.events.Events.MetricInformation.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.MetricInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        internalGetMutableMetrics().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_MetricInformation_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricInformation getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.MetricInformation.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricInformation build() {
        org.opencord.voltha.events.Events.MetricInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.MetricInformation buildPartial() {
        org.opencord.voltha.events.Events.MetricInformation result = new org.opencord.voltha.events.Events.MetricInformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.metrics_ = internalGetMetrics();
        result.metrics_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.MetricInformation) {
          return mergeFrom((org.opencord.voltha.events.Events.MetricInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.MetricInformation other) {
        if (other == org.opencord.voltha.events.Events.MetricInformation.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        internalGetMutableMetrics().mergeFrom(
            other.internalGetMetrics());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.MetricInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.MetricInformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.opencord.voltha.events.Events.MetricMetaData metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.MetricMetaData, org.opencord.voltha.events.Events.MetricMetaData.Builder, org.opencord.voltha.events.Events.MetricMetaDataOrBuilder> metadataBuilder_;
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public org.opencord.voltha.events.Events.MetricMetaData getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? org.opencord.voltha.events.Events.MetricMetaData.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public Builder setMetadata(org.opencord.voltha.events.Events.MetricMetaData value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public Builder setMetadata(
          org.opencord.voltha.events.Events.MetricMetaData.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public Builder mergeMetadata(org.opencord.voltha.events.Events.MetricMetaData value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              org.opencord.voltha.events.Events.MetricMetaData.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public org.opencord.voltha.events.Events.MetricMetaData.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      public org.opencord.voltha.events.Events.MetricMetaDataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              org.opencord.voltha.events.Events.MetricMetaData.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.event.MetricMetaData metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.MetricMetaData, org.opencord.voltha.events.Events.MetricMetaData.Builder, org.opencord.voltha.events.Events.MetricMetaDataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.MetricMetaData, org.opencord.voltha.events.Events.MetricMetaData.Builder, org.opencord.voltha.events.Events.MetricMetaDataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> metrics_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMetrics() {
        if (metrics_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetricsDefaultEntryHolder.defaultEntry);
        }
        return metrics_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableMetrics() {
        onChanged();;
        if (metrics_ == null) {
          metrics_ = com.google.protobuf.MapField.newMapField(
              MetricsDefaultEntryHolder.defaultEntry);
        }
        if (!metrics_.isMutable()) {
          metrics_ = metrics_.copy();
        }
        return metrics_;
      }

      public int getMetricsCount() {
        return internalGetMetrics().getMap().size();
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */

      public boolean containsMetrics(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetrics().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetricsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getMetrics() {
        return getMetricsMap();
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getMetricsMap() {
        return internalGetMetrics().getMap();
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */

      public float getMetricsOrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetMetrics().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */

      public float getMetricsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetMetrics().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetrics() {
        internalGetMutableMetrics().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */

      public Builder removeMetrics(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetrics().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableMetrics() {
        return internalGetMutableMetrics().getMutableMap();
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */
      public Builder putMetrics(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableMetrics().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; metrics = 2;</code>
       */

      public Builder putAllMetrics(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        internalGetMutableMetrics().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.MetricInformation)
    }

    // @@protoc_insertion_point(class_scope:event.MetricInformation)
    private static final org.opencord.voltha.events.Events.MetricInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.MetricInformation();
    }

    public static org.opencord.voltha.events.Events.MetricInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MetricInformation>
        PARSER = new com.google.protobuf.AbstractParser<MetricInformation>() {
      @java.lang.Override
      public MetricInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MetricInformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MetricInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MetricInformation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.MetricInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KpiEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.KpiEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    org.opencord.voltha.events.Events.KpiEventType.Types getType();

    /**
     * <pre>
     * UTC time-stamp of data in slice mode (seconds since epoc)
     * </pre>
     *
     * <code>float ts = 2;</code>
     */
    float getTs();

    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */
    int getPrefixesCount();
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */
    boolean containsPrefixes(
        java.lang.String key);
    /**
     * Use {@link #getPrefixesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
    getPrefixes();
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */
    java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
    getPrefixesMap();
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */

    org.opencord.voltha.events.Events.MetricValuePairs getPrefixesOrDefault(
        java.lang.String key,
        org.opencord.voltha.events.Events.MetricValuePairs defaultValue);
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */

    org.opencord.voltha.events.Events.MetricValuePairs getPrefixesOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Legacy KPI Event structured.  In mid-August, the KPI event format was updated
   *                               to a more easily parsable format. See VOL-1140
   *                               for more information.
   * </pre>
   *
   * Protobuf type {@code event.KpiEvent}
   */
  public  static final class KpiEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.KpiEvent)
      KpiEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KpiEvent.newBuilder() to construct.
    private KpiEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KpiEvent() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KpiEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 21: {

              ts_ = input.readFloat();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                prefixes_ = com.google.protobuf.MapField.newMapField(
                    PrefixesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
              prefixes__ = input.readMessage(
                  PrefixesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              prefixes_.getMutableMap().put(
                  prefixes__.getKey(), prefixes__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_KpiEvent_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetPrefixes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_KpiEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.KpiEvent.class, org.opencord.voltha.events.Events.KpiEvent.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    public org.opencord.voltha.events.Events.KpiEventType.Types getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.KpiEventType.Types result = org.opencord.voltha.events.Events.KpiEventType.Types.valueOf(type_);
      return result == null ? org.opencord.voltha.events.Events.KpiEventType.Types.UNRECOGNIZED : result;
    }

    public static final int TS_FIELD_NUMBER = 2;
    private float ts_;
    /**
     * <pre>
     * UTC time-stamp of data in slice mode (seconds since epoc)
     * </pre>
     *
     * <code>float ts = 2;</code>
     */
    public float getTs() {
      return ts_;
    }

    public static final int PREFIXES_FIELD_NUMBER = 3;
    private static final class PrefixesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>newDefaultInstance(
                  org.opencord.voltha.events.Events.internal_static_event_KpiEvent_PrefixesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.opencord.voltha.events.Events.MetricValuePairs.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> prefixes_;
    private com.google.protobuf.MapField<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
    internalGetPrefixes() {
      if (prefixes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PrefixesDefaultEntryHolder.defaultEntry);
      }
      return prefixes_;
    }

    public int getPrefixesCount() {
      return internalGetPrefixes().getMap().size();
    }
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */

    public boolean containsPrefixes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPrefixes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPrefixesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> getPrefixes() {
      return getPrefixesMap();
    }
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */

    public java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> getPrefixesMap() {
      return internalGetPrefixes().getMap();
    }
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */

    public org.opencord.voltha.events.Events.MetricValuePairs getPrefixesOrDefault(
        java.lang.String key,
        org.opencord.voltha.events.Events.MetricValuePairs defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> map =
          internalGetPrefixes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
     */

    public org.opencord.voltha.events.Events.MetricValuePairs getPrefixesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> map =
          internalGetPrefixes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.events.Events.KpiEventType.Types.slice.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (ts_ != 0F) {
        output.writeFloat(2, ts_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPrefixes(),
          PrefixesDefaultEntryHolder.defaultEntry,
          3);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.events.Events.KpiEventType.Types.slice.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (ts_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, ts_);
      }
      for (java.util.Map.Entry<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> entry
           : internalGetPrefixes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
        prefixes__ = PrefixesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, prefixes__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.KpiEvent)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.KpiEvent other = (org.opencord.voltha.events.Events.KpiEvent) obj;

      if (type_ != other.type_) return false;
      if (java.lang.Float.floatToIntBits(getTs())
          != java.lang.Float.floatToIntBits(
              other.getTs())) return false;
      if (!internalGetPrefixes().equals(
          other.internalGetPrefixes())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTs());
      if (!internalGetPrefixes().getMap().isEmpty()) {
        hash = (37 * hash) + PREFIXES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPrefixes().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.KpiEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Legacy KPI Event structured.  In mid-August, the KPI event format was updated
     *                               to a more easily parsable format. See VOL-1140
     *                               for more information.
     * </pre>
     *
     * Protobuf type {@code event.KpiEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.KpiEvent)
        org.opencord.voltha.events.Events.KpiEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEvent_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetPrefixes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutablePrefixes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.KpiEvent.class, org.opencord.voltha.events.Events.KpiEvent.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.KpiEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        ts_ = 0F;

        internalGetMutablePrefixes().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEvent_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEvent getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEvent build() {
        org.opencord.voltha.events.Events.KpiEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEvent buildPartial() {
        org.opencord.voltha.events.Events.KpiEvent result = new org.opencord.voltha.events.Events.KpiEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        result.ts_ = ts_;
        result.prefixes_ = internalGetPrefixes();
        result.prefixes_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.KpiEvent) {
          return mergeFrom((org.opencord.voltha.events.Events.KpiEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.KpiEvent other) {
        if (other == org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTs() != 0F) {
          setTs(other.getTs());
        }
        internalGetMutablePrefixes().mergeFrom(
            other.internalGetPrefixes());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.KpiEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.KpiEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public org.opencord.voltha.events.Events.KpiEventType.Types getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.KpiEventType.Types result = org.opencord.voltha.events.Events.KpiEventType.Types.valueOf(type_);
        return result == null ? org.opencord.voltha.events.Events.KpiEventType.Types.UNRECOGNIZED : result;
      }
      /**
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.events.Events.KpiEventType.Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private float ts_ ;
      /**
       * <pre>
       * UTC time-stamp of data in slice mode (seconds since epoc)
       * </pre>
       *
       * <code>float ts = 2;</code>
       */
      public float getTs() {
        return ts_;
      }
      /**
       * <pre>
       * UTC time-stamp of data in slice mode (seconds since epoc)
       * </pre>
       *
       * <code>float ts = 2;</code>
       */
      public Builder setTs(float value) {
        
        ts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UTC time-stamp of data in slice mode (seconds since epoc)
       * </pre>
       *
       * <code>float ts = 2;</code>
       */
      public Builder clearTs() {
        
        ts_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> prefixes_;
      private com.google.protobuf.MapField<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
      internalGetPrefixes() {
        if (prefixes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PrefixesDefaultEntryHolder.defaultEntry);
        }
        return prefixes_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
      internalGetMutablePrefixes() {
        onChanged();;
        if (prefixes_ == null) {
          prefixes_ = com.google.protobuf.MapField.newMapField(
              PrefixesDefaultEntryHolder.defaultEntry);
        }
        if (!prefixes_.isMutable()) {
          prefixes_ = prefixes_.copy();
        }
        return prefixes_;
      }

      public int getPrefixesCount() {
        return internalGetPrefixes().getMap().size();
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */

      public boolean containsPrefixes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPrefixes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPrefixesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> getPrefixes() {
        return getPrefixesMap();
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */

      public java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> getPrefixesMap() {
        return internalGetPrefixes().getMap();
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */

      public org.opencord.voltha.events.Events.MetricValuePairs getPrefixesOrDefault(
          java.lang.String key,
          org.opencord.voltha.events.Events.MetricValuePairs defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> map =
            internalGetPrefixes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */

      public org.opencord.voltha.events.Events.MetricValuePairs getPrefixesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> map =
            internalGetPrefixes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPrefixes() {
        internalGetMutablePrefixes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */

      public Builder removePrefixes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrefixes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs>
      getMutablePrefixes() {
        return internalGetMutablePrefixes().getMutableMap();
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */
      public Builder putPrefixes(
          java.lang.String key,
          org.opencord.voltha.events.Events.MetricValuePairs value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrefixes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .event.MetricValuePairs&gt; prefixes = 3;</code>
       */

      public Builder putAllPrefixes(
          java.util.Map<java.lang.String, org.opencord.voltha.events.Events.MetricValuePairs> values) {
        internalGetMutablePrefixes().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.KpiEvent)
    }

    // @@protoc_insertion_point(class_scope:event.KpiEvent)
    private static final org.opencord.voltha.events.Events.KpiEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.KpiEvent();
    }

    public static org.opencord.voltha.events.Events.KpiEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KpiEvent>
        PARSER = new com.google.protobuf.AbstractParser<KpiEvent>() {
      @java.lang.Override
      public KpiEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KpiEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KpiEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KpiEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.KpiEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KpiEvent2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.KpiEvent2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of KPI Event
     * </pre>
     *
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type of KPI Event
     * </pre>
     *
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    org.opencord.voltha.events.Events.KpiEventType.Types getType();

    /**
     * <pre>
     * Fields used when for slice:
     * </pre>
     *
     * <code>double ts = 2;</code>
     */
    double getTs();

    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    java.util.List<org.opencord.voltha.events.Events.MetricInformation> 
        getSliceDataList();
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    org.opencord.voltha.events.Events.MetricInformation getSliceData(int index);
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    int getSliceDataCount();
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    java.util.List<? extends org.opencord.voltha.events.Events.MetricInformationOrBuilder> 
        getSliceDataOrBuilderList();
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    org.opencord.voltha.events.Events.MetricInformationOrBuilder getSliceDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code event.KpiEvent2}
   */
  public  static final class KpiEvent2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.KpiEvent2)
      KpiEvent2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KpiEvent2.newBuilder() to construct.
    private KpiEvent2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KpiEvent2() {
      type_ = 0;
      sliceData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KpiEvent2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 17: {

              ts_ = input.readDouble();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                sliceData_ = new java.util.ArrayList<org.opencord.voltha.events.Events.MetricInformation>();
                mutable_bitField0_ |= 0x00000004;
              }
              sliceData_.add(
                  input.readMessage(org.opencord.voltha.events.Events.MetricInformation.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          sliceData_ = java.util.Collections.unmodifiableList(sliceData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_KpiEvent2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_KpiEvent2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.KpiEvent2.class, org.opencord.voltha.events.Events.KpiEvent2.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type of KPI Event
     * </pre>
     *
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type of KPI Event
     * </pre>
     *
     * <code>.event.KpiEventType.Types type = 1;</code>
     */
    public org.opencord.voltha.events.Events.KpiEventType.Types getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.KpiEventType.Types result = org.opencord.voltha.events.Events.KpiEventType.Types.valueOf(type_);
      return result == null ? org.opencord.voltha.events.Events.KpiEventType.Types.UNRECOGNIZED : result;
    }

    public static final int TS_FIELD_NUMBER = 2;
    private double ts_;
    /**
     * <pre>
     * Fields used when for slice:
     * </pre>
     *
     * <code>double ts = 2;</code>
     */
    public double getTs() {
      return ts_;
    }

    public static final int SLICE_DATA_FIELD_NUMBER = 3;
    private java.util.List<org.opencord.voltha.events.Events.MetricInformation> sliceData_;
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    public java.util.List<org.opencord.voltha.events.Events.MetricInformation> getSliceDataList() {
      return sliceData_;
    }
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    public java.util.List<? extends org.opencord.voltha.events.Events.MetricInformationOrBuilder> 
        getSliceDataOrBuilderList() {
      return sliceData_;
    }
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    public int getSliceDataCount() {
      return sliceData_.size();
    }
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    public org.opencord.voltha.events.Events.MetricInformation getSliceData(int index) {
      return sliceData_.get(index);
    }
    /**
     * <code>repeated .event.MetricInformation slice_data = 3;</code>
     */
    public org.opencord.voltha.events.Events.MetricInformationOrBuilder getSliceDataOrBuilder(
        int index) {
      return sliceData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.opencord.voltha.events.Events.KpiEventType.Types.slice.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (ts_ != 0D) {
        output.writeDouble(2, ts_);
      }
      for (int i = 0; i < sliceData_.size(); i++) {
        output.writeMessage(3, sliceData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.opencord.voltha.events.Events.KpiEventType.Types.slice.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (ts_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, ts_);
      }
      for (int i = 0; i < sliceData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sliceData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.KpiEvent2)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.KpiEvent2 other = (org.opencord.voltha.events.Events.KpiEvent2) obj;

      if (type_ != other.type_) return false;
      if (java.lang.Double.doubleToLongBits(getTs())
          != java.lang.Double.doubleToLongBits(
              other.getTs())) return false;
      if (!getSliceDataList()
          .equals(other.getSliceDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTs()));
      if (getSliceDataCount() > 0) {
        hash = (37 * hash) + SLICE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getSliceDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.KpiEvent2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.KpiEvent2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event.KpiEvent2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.KpiEvent2)
        org.opencord.voltha.events.Events.KpiEvent2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEvent2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEvent2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.KpiEvent2.class, org.opencord.voltha.events.Events.KpiEvent2.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.KpiEvent2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSliceDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        ts_ = 0D;

        if (sliceDataBuilder_ == null) {
          sliceData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          sliceDataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_KpiEvent2_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEvent2 getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEvent2 build() {
        org.opencord.voltha.events.Events.KpiEvent2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.KpiEvent2 buildPartial() {
        org.opencord.voltha.events.Events.KpiEvent2 result = new org.opencord.voltha.events.Events.KpiEvent2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        result.ts_ = ts_;
        if (sliceDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            sliceData_ = java.util.Collections.unmodifiableList(sliceData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.sliceData_ = sliceData_;
        } else {
          result.sliceData_ = sliceDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.KpiEvent2) {
          return mergeFrom((org.opencord.voltha.events.Events.KpiEvent2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.KpiEvent2 other) {
        if (other == org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTs() != 0D) {
          setTs(other.getTs());
        }
        if (sliceDataBuilder_ == null) {
          if (!other.sliceData_.isEmpty()) {
            if (sliceData_.isEmpty()) {
              sliceData_ = other.sliceData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSliceDataIsMutable();
              sliceData_.addAll(other.sliceData_);
            }
            onChanged();
          }
        } else {
          if (!other.sliceData_.isEmpty()) {
            if (sliceDataBuilder_.isEmpty()) {
              sliceDataBuilder_.dispose();
              sliceDataBuilder_ = null;
              sliceData_ = other.sliceData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              sliceDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSliceDataFieldBuilder() : null;
            } else {
              sliceDataBuilder_.addAllMessages(other.sliceData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.KpiEvent2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.KpiEvent2) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * Type of KPI Event
       * </pre>
       *
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of KPI Event
       * </pre>
       *
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of KPI Event
       * </pre>
       *
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public org.opencord.voltha.events.Events.KpiEventType.Types getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.KpiEventType.Types result = org.opencord.voltha.events.Events.KpiEventType.Types.valueOf(type_);
        return result == null ? org.opencord.voltha.events.Events.KpiEventType.Types.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type of KPI Event
       * </pre>
       *
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public Builder setType(org.opencord.voltha.events.Events.KpiEventType.Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of KPI Event
       * </pre>
       *
       * <code>.event.KpiEventType.Types type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private double ts_ ;
      /**
       * <pre>
       * Fields used when for slice:
       * </pre>
       *
       * <code>double ts = 2;</code>
       */
      public double getTs() {
        return ts_;
      }
      /**
       * <pre>
       * Fields used when for slice:
       * </pre>
       *
       * <code>double ts = 2;</code>
       */
      public Builder setTs(double value) {
        
        ts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields used when for slice:
       * </pre>
       *
       * <code>double ts = 2;</code>
       */
      public Builder clearTs() {
        
        ts_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<org.opencord.voltha.events.Events.MetricInformation> sliceData_ =
        java.util.Collections.emptyList();
      private void ensureSliceDataIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          sliceData_ = new java.util.ArrayList<org.opencord.voltha.events.Events.MetricInformation>(sliceData_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.events.Events.MetricInformation, org.opencord.voltha.events.Events.MetricInformation.Builder, org.opencord.voltha.events.Events.MetricInformationOrBuilder> sliceDataBuilder_;

      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public java.util.List<org.opencord.voltha.events.Events.MetricInformation> getSliceDataList() {
        if (sliceDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sliceData_);
        } else {
          return sliceDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public int getSliceDataCount() {
        if (sliceDataBuilder_ == null) {
          return sliceData_.size();
        } else {
          return sliceDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public org.opencord.voltha.events.Events.MetricInformation getSliceData(int index) {
        if (sliceDataBuilder_ == null) {
          return sliceData_.get(index);
        } else {
          return sliceDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder setSliceData(
          int index, org.opencord.voltha.events.Events.MetricInformation value) {
        if (sliceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSliceDataIsMutable();
          sliceData_.set(index, value);
          onChanged();
        } else {
          sliceDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder setSliceData(
          int index, org.opencord.voltha.events.Events.MetricInformation.Builder builderForValue) {
        if (sliceDataBuilder_ == null) {
          ensureSliceDataIsMutable();
          sliceData_.set(index, builderForValue.build());
          onChanged();
        } else {
          sliceDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder addSliceData(org.opencord.voltha.events.Events.MetricInformation value) {
        if (sliceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSliceDataIsMutable();
          sliceData_.add(value);
          onChanged();
        } else {
          sliceDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder addSliceData(
          int index, org.opencord.voltha.events.Events.MetricInformation value) {
        if (sliceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSliceDataIsMutable();
          sliceData_.add(index, value);
          onChanged();
        } else {
          sliceDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder addSliceData(
          org.opencord.voltha.events.Events.MetricInformation.Builder builderForValue) {
        if (sliceDataBuilder_ == null) {
          ensureSliceDataIsMutable();
          sliceData_.add(builderForValue.build());
          onChanged();
        } else {
          sliceDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder addSliceData(
          int index, org.opencord.voltha.events.Events.MetricInformation.Builder builderForValue) {
        if (sliceDataBuilder_ == null) {
          ensureSliceDataIsMutable();
          sliceData_.add(index, builderForValue.build());
          onChanged();
        } else {
          sliceDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder addAllSliceData(
          java.lang.Iterable<? extends org.opencord.voltha.events.Events.MetricInformation> values) {
        if (sliceDataBuilder_ == null) {
          ensureSliceDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sliceData_);
          onChanged();
        } else {
          sliceDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder clearSliceData() {
        if (sliceDataBuilder_ == null) {
          sliceData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          sliceDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public Builder removeSliceData(int index) {
        if (sliceDataBuilder_ == null) {
          ensureSliceDataIsMutable();
          sliceData_.remove(index);
          onChanged();
        } else {
          sliceDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public org.opencord.voltha.events.Events.MetricInformation.Builder getSliceDataBuilder(
          int index) {
        return getSliceDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public org.opencord.voltha.events.Events.MetricInformationOrBuilder getSliceDataOrBuilder(
          int index) {
        if (sliceDataBuilder_ == null) {
          return sliceData_.get(index);  } else {
          return sliceDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public java.util.List<? extends org.opencord.voltha.events.Events.MetricInformationOrBuilder> 
           getSliceDataOrBuilderList() {
        if (sliceDataBuilder_ != null) {
          return sliceDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sliceData_);
        }
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public org.opencord.voltha.events.Events.MetricInformation.Builder addSliceDataBuilder() {
        return getSliceDataFieldBuilder().addBuilder(
            org.opencord.voltha.events.Events.MetricInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public org.opencord.voltha.events.Events.MetricInformation.Builder addSliceDataBuilder(
          int index) {
        return getSliceDataFieldBuilder().addBuilder(
            index, org.opencord.voltha.events.Events.MetricInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .event.MetricInformation slice_data = 3;</code>
       */
      public java.util.List<org.opencord.voltha.events.Events.MetricInformation.Builder> 
           getSliceDataBuilderList() {
        return getSliceDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.opencord.voltha.events.Events.MetricInformation, org.opencord.voltha.events.Events.MetricInformation.Builder, org.opencord.voltha.events.Events.MetricInformationOrBuilder> 
          getSliceDataFieldBuilder() {
        if (sliceDataBuilder_ == null) {
          sliceDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.opencord.voltha.events.Events.MetricInformation, org.opencord.voltha.events.Events.MetricInformation.Builder, org.opencord.voltha.events.Events.MetricInformationOrBuilder>(
                  sliceData_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          sliceData_ = null;
        }
        return sliceDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.KpiEvent2)
    }

    // @@protoc_insertion_point(class_scope:event.KpiEvent2)
    private static final org.opencord.voltha.events.Events.KpiEvent2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.KpiEvent2();
    }

    public static org.opencord.voltha.events.Events.KpiEvent2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KpiEvent2>
        PARSER = new com.google.protobuf.AbstractParser<KpiEvent2>() {
      @java.lang.Override
      public KpiEvent2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KpiEvent2(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KpiEvent2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KpiEvent2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.KpiEvent2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.DeviceEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identifier of the originating resource of the event, for ex: device_id
     * </pre>
     *
     * <code>string resource_id = 1;</code>
     */
    java.lang.String getResourceId();
    /**
     * <pre>
     * Identifier of the originating resource of the event, for ex: device_id
     * </pre>
     *
     * <code>string resource_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getResourceIdBytes();

    /**
     * <pre>
     * device_event_name indicates clearly the name of the device event
     * </pre>
     *
     * <code>string device_event_name = 2;</code>
     */
    java.lang.String getDeviceEventName();
    /**
     * <pre>
     * device_event_name indicates clearly the name of the device event
     * </pre>
     *
     * <code>string device_event_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceEventNameBytes();

    /**
     * <pre>
     * Textual explanation of the device event
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Textual explanation of the device event
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */
    int getContextCount();
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */
    boolean containsContext(
        java.lang.String key);
    /**
     * Use {@link #getContextMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getContext();
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getContextMap();
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */

    java.lang.String getContextOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */

    java.lang.String getContextOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Describes the events specific to device
   * </pre>
   *
   * Protobuf type {@code event.DeviceEvent}
   */
  public  static final class DeviceEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.DeviceEvent)
      DeviceEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceEvent.newBuilder() to construct.
    private DeviceEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceEvent() {
      resourceId_ = "";
      deviceEventName_ = "";
      description_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              resourceId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              deviceEventName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                context_ = com.google.protobuf.MapField.newMapField(
                    ContextDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              context__ = input.readMessage(
                  ContextDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              context_.getMutableMap().put(
                  context__.getKey(), context__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_DeviceEvent_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetContext();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_DeviceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.DeviceEvent.class, org.opencord.voltha.events.Events.DeviceEvent.Builder.class);
    }

    private int bitField0_;
    public static final int RESOURCE_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object resourceId_;
    /**
     * <pre>
     * Identifier of the originating resource of the event, for ex: device_id
     * </pre>
     *
     * <code>string resource_id = 1;</code>
     */
    public java.lang.String getResourceId() {
      java.lang.Object ref = resourceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resourceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifier of the originating resource of the event, for ex: device_id
     * </pre>
     *
     * <code>string resource_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getResourceIdBytes() {
      java.lang.Object ref = resourceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_EVENT_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object deviceEventName_;
    /**
     * <pre>
     * device_event_name indicates clearly the name of the device event
     * </pre>
     *
     * <code>string device_event_name = 2;</code>
     */
    public java.lang.String getDeviceEventName() {
      java.lang.Object ref = deviceEventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceEventName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * device_event_name indicates clearly the name of the device event
     * </pre>
     *
     * <code>string device_event_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceEventNameBytes() {
      java.lang.Object ref = deviceEventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceEventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Textual explanation of the device event
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Textual explanation of the device event
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTEXT_FIELD_NUMBER = 4;
    private static final class ContextDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.opencord.voltha.events.Events.internal_static_event_DeviceEvent_ContextEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> context_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetContext() {
      if (context_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContextDefaultEntryHolder.defaultEntry);
      }
      return context_;
    }

    public int getContextCount() {
      return internalGetContext().getMap().size();
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */

    public boolean containsContext(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetContext().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContextMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getContext() {
      return getContextMap();
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getContextMap() {
      return internalGetContext().getMap();
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */

    public java.lang.String getContextOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContext().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 4;</code>
     */

    public java.lang.String getContextOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContext().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getResourceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resourceId_);
      }
      if (!getDeviceEventNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceEventName_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetContext(),
          ContextDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getResourceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, resourceId_);
      }
      if (!getDeviceEventNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceEventName_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetContext().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        context__ = ContextDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, context__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.DeviceEvent)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.DeviceEvent other = (org.opencord.voltha.events.Events.DeviceEvent) obj;

      if (!getResourceId()
          .equals(other.getResourceId())) return false;
      if (!getDeviceEventName()
          .equals(other.getDeviceEventName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!internalGetContext().equals(
          other.internalGetContext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESOURCE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getResourceId().hashCode();
      hash = (37 * hash) + DEVICE_EVENT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceEventName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (!internalGetContext().getMap().isEmpty()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetContext().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.DeviceEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.DeviceEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the events specific to device
     * </pre>
     *
     * Protobuf type {@code event.DeviceEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.DeviceEvent)
        org.opencord.voltha.events.Events.DeviceEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_DeviceEvent_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetContext();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableContext();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_DeviceEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.DeviceEvent.class, org.opencord.voltha.events.Events.DeviceEvent.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.DeviceEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        resourceId_ = "";

        deviceEventName_ = "";

        description_ = "";

        internalGetMutableContext().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_DeviceEvent_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.DeviceEvent getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.DeviceEvent build() {
        org.opencord.voltha.events.Events.DeviceEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.DeviceEvent buildPartial() {
        org.opencord.voltha.events.Events.DeviceEvent result = new org.opencord.voltha.events.Events.DeviceEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.resourceId_ = resourceId_;
        result.deviceEventName_ = deviceEventName_;
        result.description_ = description_;
        result.context_ = internalGetContext();
        result.context_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.DeviceEvent) {
          return mergeFrom((org.opencord.voltha.events.Events.DeviceEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.DeviceEvent other) {
        if (other == org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance()) return this;
        if (!other.getResourceId().isEmpty()) {
          resourceId_ = other.resourceId_;
          onChanged();
        }
        if (!other.getDeviceEventName().isEmpty()) {
          deviceEventName_ = other.deviceEventName_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        internalGetMutableContext().mergeFrom(
            other.internalGetContext());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.DeviceEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.DeviceEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object resourceId_ = "";
      /**
       * <pre>
       * Identifier of the originating resource of the event, for ex: device_id
       * </pre>
       *
       * <code>string resource_id = 1;</code>
       */
      public java.lang.String getResourceId() {
        java.lang.Object ref = resourceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          resourceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the originating resource of the event, for ex: device_id
       * </pre>
       *
       * <code>string resource_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getResourceIdBytes() {
        java.lang.Object ref = resourceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the originating resource of the event, for ex: device_id
       * </pre>
       *
       * <code>string resource_id = 1;</code>
       */
      public Builder setResourceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        resourceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the originating resource of the event, for ex: device_id
       * </pre>
       *
       * <code>string resource_id = 1;</code>
       */
      public Builder clearResourceId() {
        
        resourceId_ = getDefaultInstance().getResourceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the originating resource of the event, for ex: device_id
       * </pre>
       *
       * <code>string resource_id = 1;</code>
       */
      public Builder setResourceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        resourceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object deviceEventName_ = "";
      /**
       * <pre>
       * device_event_name indicates clearly the name of the device event
       * </pre>
       *
       * <code>string device_event_name = 2;</code>
       */
      public java.lang.String getDeviceEventName() {
        java.lang.Object ref = deviceEventName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceEventName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * device_event_name indicates clearly the name of the device event
       * </pre>
       *
       * <code>string device_event_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceEventNameBytes() {
        java.lang.Object ref = deviceEventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceEventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * device_event_name indicates clearly the name of the device event
       * </pre>
       *
       * <code>string device_event_name = 2;</code>
       */
      public Builder setDeviceEventName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceEventName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * device_event_name indicates clearly the name of the device event
       * </pre>
       *
       * <code>string device_event_name = 2;</code>
       */
      public Builder clearDeviceEventName() {
        
        deviceEventName_ = getDefaultInstance().getDeviceEventName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * device_event_name indicates clearly the name of the device event
       * </pre>
       *
       * <code>string device_event_name = 2;</code>
       */
      public Builder setDeviceEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceEventName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Textual explanation of the device event
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Textual explanation of the device event
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Textual explanation of the device event
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Textual explanation of the device event
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Textual explanation of the device event
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> context_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetContext() {
        if (context_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ContextDefaultEntryHolder.defaultEntry);
        }
        return context_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableContext() {
        onChanged();;
        if (context_ == null) {
          context_ = com.google.protobuf.MapField.newMapField(
              ContextDefaultEntryHolder.defaultEntry);
        }
        if (!context_.isMutable()) {
          context_ = context_.copy();
        }
        return context_;
      }

      public int getContextCount() {
        return internalGetContext().getMap().size();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */

      public boolean containsContext(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetContext().getMap().containsKey(key);
      }
      /**
       * Use {@link #getContextMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getContext() {
        return getContextMap();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getContextMap() {
        return internalGetContext().getMap();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */

      public java.lang.String getContextOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetContext().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */

      public java.lang.String getContextOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetContext().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearContext() {
        internalGetMutableContext().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */

      public Builder removeContext(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableContext().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableContext() {
        return internalGetMutableContext().getMutableMap();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */
      public Builder putContext(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableContext().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 4;</code>
       */

      public Builder putAllContext(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableContext().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.DeviceEvent)
    }

    // @@protoc_insertion_point(class_scope:event.DeviceEvent)
    private static final org.opencord.voltha.events.Events.DeviceEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.DeviceEvent();
    }

    public static org.opencord.voltha.events.Events.DeviceEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceEvent>
        PARSER = new com.google.protobuf.AbstractParser<DeviceEvent>() {
      @java.lang.Override
      public DeviceEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeviceEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.DeviceEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RPCEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.RPCEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * RPC name
     * </pre>
     *
     * <code>string rpc = 1;</code>
     */
    java.lang.String getRpc();
    /**
     * <pre>
     * RPC name
     * </pre>
     *
     * <code>string rpc = 1;</code>
     */
    com.google.protobuf.ByteString
        getRpcBytes();

    /**
     * <pre>
     * The operation id of that request.  Can be a log correlation ID
     * </pre>
     *
     * <code>string operation_id = 2;</code>
     */
    java.lang.String getOperationId();
    /**
     * <pre>
     * The operation id of that request.  Can be a log correlation ID
     * </pre>
     *
     * <code>string operation_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getOperationIdBytes();

    /**
     * <pre>
     * Identifies the service name originating the event
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    java.lang.String getService();
    /**
     * <pre>
     * Identifies the service name originating the event
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     * Identifies the stack originating the event
     * </pre>
     *
     * <code>string stack_id = 4;</code>
     */
    java.lang.String getStackId();
    /**
     * <pre>
     * Identifies the stack originating the event
     * </pre>
     *
     * <code>string stack_id = 4;</code>
     */
    com.google.protobuf.ByteString
        getStackIdBytes();

    /**
     * <pre>
     * Identifies the resource upon which the action is taken, e.g. device_id
     * </pre>
     *
     * <code>string resource_id = 5;</code>
     */
    java.lang.String getResourceId();
    /**
     * <pre>
     * Identifies the resource upon which the action is taken, e.g. device_id
     * </pre>
     *
     * <code>string resource_id = 5;</code>
     */
    com.google.protobuf.ByteString
        getResourceIdBytes();

    /**
     * <pre>
     * Textual explanation of the event
     * </pre>
     *
     * <code>string description = 6;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Textual explanation of the event
     * </pre>
     *
     * <code>string description = 6;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */
    int getContextCount();
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */
    boolean containsContext(
        java.lang.String key);
    /**
     * Use {@link #getContextMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getContext();
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getContextMap();
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */

    java.lang.String getContextOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */

    java.lang.String getContextOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Status of the RPC Event
     * </pre>
     *
     * <code>.common.OperationResp status = 8;</code>
     */
    boolean hasStatus();
    /**
     * <pre>
     * Status of the RPC Event
     * </pre>
     *
     * <code>.common.OperationResp status = 8;</code>
     */
    org.opencord.voltha.Common.OperationResp getStatus();
    /**
     * <pre>
     * Status of the RPC Event
     * </pre>
     *
     * <code>.common.OperationResp status = 8;</code>
     */
    org.opencord.voltha.Common.OperationRespOrBuilder getStatusOrBuilder();
  }
  /**
   * <pre>
   * Describes the events specific to an RPC request
   * </pre>
   *
   * Protobuf type {@code event.RPCEvent}
   */
  public  static final class RPCEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.RPCEvent)
      RPCEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RPCEvent.newBuilder() to construct.
    private RPCEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RPCEvent() {
      rpc_ = "";
      operationId_ = "";
      service_ = "";
      stackId_ = "";
      resourceId_ = "";
      description_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RPCEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              rpc_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              operationId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              stackId_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              resourceId_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                context_ = com.google.protobuf.MapField.newMapField(
                    ContextDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              context__ = input.readMessage(
                  ContextDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              context_.getMutableMap().put(
                  context__.getKey(), context__.getValue());
              break;
            }
            case 66: {
              org.opencord.voltha.Common.OperationResp.Builder subBuilder = null;
              if (status_ != null) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(org.opencord.voltha.Common.OperationResp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_RPCEvent_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetContext();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_RPCEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.RPCEvent.class, org.opencord.voltha.events.Events.RPCEvent.Builder.class);
    }

    private int bitField0_;
    public static final int RPC_FIELD_NUMBER = 1;
    private volatile java.lang.Object rpc_;
    /**
     * <pre>
     * RPC name
     * </pre>
     *
     * <code>string rpc = 1;</code>
     */
    public java.lang.String getRpc() {
      java.lang.Object ref = rpc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rpc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * RPC name
     * </pre>
     *
     * <code>string rpc = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRpcBytes() {
      java.lang.Object ref = rpc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rpc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPERATION_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object operationId_;
    /**
     * <pre>
     * The operation id of that request.  Can be a log correlation ID
     * </pre>
     *
     * <code>string operation_id = 2;</code>
     */
    public java.lang.String getOperationId() {
      java.lang.Object ref = operationId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The operation id of that request.  Can be a log correlation ID
     * </pre>
     *
     * <code>string operation_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOperationIdBytes() {
      java.lang.Object ref = operationId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICE_FIELD_NUMBER = 3;
    private volatile java.lang.Object service_;
    /**
     * <pre>
     * Identifies the service name originating the event
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifies the service name originating the event
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STACK_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object stackId_;
    /**
     * <pre>
     * Identifies the stack originating the event
     * </pre>
     *
     * <code>string stack_id = 4;</code>
     */
    public java.lang.String getStackId() {
      java.lang.Object ref = stackId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stackId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifies the stack originating the event
     * </pre>
     *
     * <code>string stack_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStackIdBytes() {
      java.lang.Object ref = stackId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stackId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCE_ID_FIELD_NUMBER = 5;
    private volatile java.lang.Object resourceId_;
    /**
     * <pre>
     * Identifies the resource upon which the action is taken, e.g. device_id
     * </pre>
     *
     * <code>string resource_id = 5;</code>
     */
    public java.lang.String getResourceId() {
      java.lang.Object ref = resourceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resourceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifies the resource upon which the action is taken, e.g. device_id
     * </pre>
     *
     * <code>string resource_id = 5;</code>
     */
    public com.google.protobuf.ByteString
        getResourceIdBytes() {
      java.lang.Object ref = resourceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 6;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Textual explanation of the event
     * </pre>
     *
     * <code>string description = 6;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Textual explanation of the event
     * </pre>
     *
     * <code>string description = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTEXT_FIELD_NUMBER = 7;
    private static final class ContextDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.opencord.voltha.events.Events.internal_static_event_RPCEvent_ContextEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> context_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetContext() {
      if (context_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContextDefaultEntryHolder.defaultEntry);
      }
      return context_;
    }

    public int getContextCount() {
      return internalGetContext().getMap().size();
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */

    public boolean containsContext(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetContext().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContextMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getContext() {
      return getContextMap();
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getContextMap() {
      return internalGetContext().getMap();
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */

    public java.lang.String getContextOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContext().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Key/Value storage for extra information that may give context to the event
     * </pre>
     *
     * <code>map&lt;string, string&gt; context = 7;</code>
     */

    public java.lang.String getContextOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetContext().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STATUS_FIELD_NUMBER = 8;
    private org.opencord.voltha.Common.OperationResp status_;
    /**
     * <pre>
     * Status of the RPC Event
     * </pre>
     *
     * <code>.common.OperationResp status = 8;</code>
     */
    public boolean hasStatus() {
      return status_ != null;
    }
    /**
     * <pre>
     * Status of the RPC Event
     * </pre>
     *
     * <code>.common.OperationResp status = 8;</code>
     */
    public org.opencord.voltha.Common.OperationResp getStatus() {
      return status_ == null ? org.opencord.voltha.Common.OperationResp.getDefaultInstance() : status_;
    }
    /**
     * <pre>
     * Status of the RPC Event
     * </pre>
     *
     * <code>.common.OperationResp status = 8;</code>
     */
    public org.opencord.voltha.Common.OperationRespOrBuilder getStatusOrBuilder() {
      return getStatus();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRpcBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rpc_);
      }
      if (!getOperationIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, operationId_);
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, service_);
      }
      if (!getStackIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stackId_);
      }
      if (!getResourceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, resourceId_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, description_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetContext(),
          ContextDefaultEntryHolder.defaultEntry,
          7);
      if (status_ != null) {
        output.writeMessage(8, getStatus());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRpcBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rpc_);
      }
      if (!getOperationIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, operationId_);
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, service_);
      }
      if (!getStackIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stackId_);
      }
      if (!getResourceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, resourceId_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, description_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetContext().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        context__ = ContextDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, context__);
      }
      if (status_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getStatus());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.RPCEvent)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.RPCEvent other = (org.opencord.voltha.events.Events.RPCEvent) obj;

      if (!getRpc()
          .equals(other.getRpc())) return false;
      if (!getOperationId()
          .equals(other.getOperationId())) return false;
      if (!getService()
          .equals(other.getService())) return false;
      if (!getStackId()
          .equals(other.getStackId())) return false;
      if (!getResourceId()
          .equals(other.getResourceId())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!internalGetContext().equals(
          other.internalGetContext())) return false;
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RPC_FIELD_NUMBER;
      hash = (53 * hash) + getRpc().hashCode();
      hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOperationId().hashCode();
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + STACK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getStackId().hashCode();
      hash = (37 * hash) + RESOURCE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getResourceId().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (!internalGetContext().getMap().isEmpty()) {
        hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetContext().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.RPCEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.RPCEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the events specific to an RPC request
     * </pre>
     *
     * Protobuf type {@code event.RPCEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.RPCEvent)
        org.opencord.voltha.events.Events.RPCEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_RPCEvent_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetContext();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableContext();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_RPCEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.RPCEvent.class, org.opencord.voltha.events.Events.RPCEvent.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.RPCEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        rpc_ = "";

        operationId_ = "";

        service_ = "";

        stackId_ = "";

        resourceId_ = "";

        description_ = "";

        internalGetMutableContext().clear();
        if (statusBuilder_ == null) {
          status_ = null;
        } else {
          status_ = null;
          statusBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_RPCEvent_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.RPCEvent getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.RPCEvent build() {
        org.opencord.voltha.events.Events.RPCEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.RPCEvent buildPartial() {
        org.opencord.voltha.events.Events.RPCEvent result = new org.opencord.voltha.events.Events.RPCEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.rpc_ = rpc_;
        result.operationId_ = operationId_;
        result.service_ = service_;
        result.stackId_ = stackId_;
        result.resourceId_ = resourceId_;
        result.description_ = description_;
        result.context_ = internalGetContext();
        result.context_.makeImmutable();
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.RPCEvent) {
          return mergeFrom((org.opencord.voltha.events.Events.RPCEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.RPCEvent other) {
        if (other == org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance()) return this;
        if (!other.getRpc().isEmpty()) {
          rpc_ = other.rpc_;
          onChanged();
        }
        if (!other.getOperationId().isEmpty()) {
          operationId_ = other.operationId_;
          onChanged();
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (!other.getStackId().isEmpty()) {
          stackId_ = other.stackId_;
          onChanged();
        }
        if (!other.getResourceId().isEmpty()) {
          resourceId_ = other.resourceId_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        internalGetMutableContext().mergeFrom(
            other.internalGetContext());
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.RPCEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.RPCEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object rpc_ = "";
      /**
       * <pre>
       * RPC name
       * </pre>
       *
       * <code>string rpc = 1;</code>
       */
      public java.lang.String getRpc() {
        java.lang.Object ref = rpc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rpc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * RPC name
       * </pre>
       *
       * <code>string rpc = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRpcBytes() {
        java.lang.Object ref = rpc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rpc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * RPC name
       * </pre>
       *
       * <code>string rpc = 1;</code>
       */
      public Builder setRpc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rpc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RPC name
       * </pre>
       *
       * <code>string rpc = 1;</code>
       */
      public Builder clearRpc() {
        
        rpc_ = getDefaultInstance().getRpc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RPC name
       * </pre>
       *
       * <code>string rpc = 1;</code>
       */
      public Builder setRpcBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rpc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object operationId_ = "";
      /**
       * <pre>
       * The operation id of that request.  Can be a log correlation ID
       * </pre>
       *
       * <code>string operation_id = 2;</code>
       */
      public java.lang.String getOperationId() {
        java.lang.Object ref = operationId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operationId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The operation id of that request.  Can be a log correlation ID
       * </pre>
       *
       * <code>string operation_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOperationIdBytes() {
        java.lang.Object ref = operationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The operation id of that request.  Can be a log correlation ID
       * </pre>
       *
       * <code>string operation_id = 2;</code>
       */
      public Builder setOperationId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        operationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The operation id of that request.  Can be a log correlation ID
       * </pre>
       *
       * <code>string operation_id = 2;</code>
       */
      public Builder clearOperationId() {
        
        operationId_ = getDefaultInstance().getOperationId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The operation id of that request.  Can be a log correlation ID
       * </pre>
       *
       * <code>string operation_id = 2;</code>
       */
      public Builder setOperationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        operationId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object service_ = "";
      /**
       * <pre>
       * Identifies the service name originating the event
       * </pre>
       *
       * <code>string service = 3;</code>
       */
      public java.lang.String getService() {
        java.lang.Object ref = service_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifies the service name originating the event
       * </pre>
       *
       * <code>string service = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        java.lang.Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifies the service name originating the event
       * </pre>
       *
       * <code>string service = 3;</code>
       */
      public Builder setService(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the service name originating the event
       * </pre>
       *
       * <code>string service = 3;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the service name originating the event
       * </pre>
       *
       * <code>string service = 3;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object stackId_ = "";
      /**
       * <pre>
       * Identifies the stack originating the event
       * </pre>
       *
       * <code>string stack_id = 4;</code>
       */
      public java.lang.String getStackId() {
        java.lang.Object ref = stackId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stackId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifies the stack originating the event
       * </pre>
       *
       * <code>string stack_id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStackIdBytes() {
        java.lang.Object ref = stackId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stackId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifies the stack originating the event
       * </pre>
       *
       * <code>string stack_id = 4;</code>
       */
      public Builder setStackId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stackId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the stack originating the event
       * </pre>
       *
       * <code>string stack_id = 4;</code>
       */
      public Builder clearStackId() {
        
        stackId_ = getDefaultInstance().getStackId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the stack originating the event
       * </pre>
       *
       * <code>string stack_id = 4;</code>
       */
      public Builder setStackIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stackId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object resourceId_ = "";
      /**
       * <pre>
       * Identifies the resource upon which the action is taken, e.g. device_id
       * </pre>
       *
       * <code>string resource_id = 5;</code>
       */
      public java.lang.String getResourceId() {
        java.lang.Object ref = resourceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          resourceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifies the resource upon which the action is taken, e.g. device_id
       * </pre>
       *
       * <code>string resource_id = 5;</code>
       */
      public com.google.protobuf.ByteString
          getResourceIdBytes() {
        java.lang.Object ref = resourceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifies the resource upon which the action is taken, e.g. device_id
       * </pre>
       *
       * <code>string resource_id = 5;</code>
       */
      public Builder setResourceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        resourceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the resource upon which the action is taken, e.g. device_id
       * </pre>
       *
       * <code>string resource_id = 5;</code>
       */
      public Builder clearResourceId() {
        
        resourceId_ = getDefaultInstance().getResourceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the resource upon which the action is taken, e.g. device_id
       * </pre>
       *
       * <code>string resource_id = 5;</code>
       */
      public Builder setResourceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        resourceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Textual explanation of the event
       * </pre>
       *
       * <code>string description = 6;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Textual explanation of the event
       * </pre>
       *
       * <code>string description = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Textual explanation of the event
       * </pre>
       *
       * <code>string description = 6;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Textual explanation of the event
       * </pre>
       *
       * <code>string description = 6;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Textual explanation of the event
       * </pre>
       *
       * <code>string description = 6;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> context_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetContext() {
        if (context_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ContextDefaultEntryHolder.defaultEntry);
        }
        return context_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableContext() {
        onChanged();;
        if (context_ == null) {
          context_ = com.google.protobuf.MapField.newMapField(
              ContextDefaultEntryHolder.defaultEntry);
        }
        if (!context_.isMutable()) {
          context_ = context_.copy();
        }
        return context_;
      }

      public int getContextCount() {
        return internalGetContext().getMap().size();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */

      public boolean containsContext(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetContext().getMap().containsKey(key);
      }
      /**
       * Use {@link #getContextMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getContext() {
        return getContextMap();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getContextMap() {
        return internalGetContext().getMap();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */

      public java.lang.String getContextOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetContext().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */

      public java.lang.String getContextOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetContext().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearContext() {
        internalGetMutableContext().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */

      public Builder removeContext(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableContext().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableContext() {
        return internalGetMutableContext().getMutableMap();
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */
      public Builder putContext(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableContext().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Key/Value storage for extra information that may give context to the event
       * </pre>
       *
       * <code>map&lt;string, string&gt; context = 7;</code>
       */

      public Builder putAllContext(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableContext().getMutableMap()
            .putAll(values);
        return this;
      }

      private org.opencord.voltha.Common.OperationResp status_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.Common.OperationResp, org.opencord.voltha.Common.OperationResp.Builder, org.opencord.voltha.Common.OperationRespOrBuilder> statusBuilder_;
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public boolean hasStatus() {
        return statusBuilder_ != null || status_ != null;
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public org.opencord.voltha.Common.OperationResp getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? org.opencord.voltha.Common.OperationResp.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public Builder setStatus(org.opencord.voltha.Common.OperationResp value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public Builder setStatus(
          org.opencord.voltha.Common.OperationResp.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public Builder mergeStatus(org.opencord.voltha.Common.OperationResp value) {
        if (statusBuilder_ == null) {
          if (status_ != null) {
            status_ =
              org.opencord.voltha.Common.OperationResp.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = null;
          onChanged();
        } else {
          status_ = null;
          statusBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public org.opencord.voltha.Common.OperationResp.Builder getStatusBuilder() {
        
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      public org.opencord.voltha.Common.OperationRespOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              org.opencord.voltha.Common.OperationResp.getDefaultInstance() : status_;
        }
      }
      /**
       * <pre>
       * Status of the RPC Event
       * </pre>
       *
       * <code>.common.OperationResp status = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.Common.OperationResp, org.opencord.voltha.Common.OperationResp.Builder, org.opencord.voltha.Common.OperationRespOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.Common.OperationResp, org.opencord.voltha.Common.OperationResp.Builder, org.opencord.voltha.Common.OperationRespOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.RPCEvent)
    }

    // @@protoc_insertion_point(class_scope:event.RPCEvent)
    private static final org.opencord.voltha.events.Events.RPCEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.RPCEvent();
    }

    public static org.opencord.voltha.events.Events.RPCEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RPCEvent>
        PARSER = new com.google.protobuf.AbstractParser<RPCEvent>() {
      @java.lang.Override
      public RPCEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RPCEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RPCEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RPCEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.RPCEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventCategoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventCategory)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Identify the area of the system impacted by the event.
   * </pre>
   *
   * Protobuf type {@code event.EventCategory}
   */
  public  static final class EventCategory extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventCategory)
      EventCategoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventCategory.newBuilder() to construct.
    private EventCategory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventCategory() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventCategory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventCategory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventCategory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventCategory.class, org.opencord.voltha.events.Events.EventCategory.Builder.class);
    }

    /**
     * Protobuf enum {@code event.EventCategory.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>COMMUNICATION = 0;</code>
       */
      COMMUNICATION(0),
      /**
       * <code>ENVIRONMENT = 1;</code>
       */
      ENVIRONMENT(1),
      /**
       * <code>EQUIPMENT = 2;</code>
       */
      EQUIPMENT(2),
      /**
       * <code>SERVICE = 3;</code>
       */
      SERVICE(3),
      /**
       * <code>PROCESSING = 4;</code>
       */
      PROCESSING(4),
      /**
       * <pre>
       * Add new event areas here
       * </pre>
       *
       * <code>SECURITY = 5;</code>
       */
      SECURITY(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>COMMUNICATION = 0;</code>
       */
      public static final int COMMUNICATION_VALUE = 0;
      /**
       * <code>ENVIRONMENT = 1;</code>
       */
      public static final int ENVIRONMENT_VALUE = 1;
      /**
       * <code>EQUIPMENT = 2;</code>
       */
      public static final int EQUIPMENT_VALUE = 2;
      /**
       * <code>SERVICE = 3;</code>
       */
      public static final int SERVICE_VALUE = 3;
      /**
       * <code>PROCESSING = 4;</code>
       */
      public static final int PROCESSING_VALUE = 4;
      /**
       * <pre>
       * Add new event areas here
       * </pre>
       *
       * <code>SECURITY = 5;</code>
       */
      public static final int SECURITY_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Types valueOf(int value) {
        return forNumber(value);
      }

      public static Types forNumber(int value) {
        switch (value) {
          case 0: return COMMUNICATION;
          case 1: return ENVIRONMENT;
          case 2: return EQUIPMENT;
          case 3: return SERVICE;
          case 4: return PROCESSING;
          case 5: return SECURITY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Types> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.EventCategory.getDescriptor().getEnumTypes().get(0);
      }

      private static final Types[] VALUES = values();

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Types(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:event.EventCategory.Types)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventCategory)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventCategory other = (org.opencord.voltha.events.Events.EventCategory) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventCategory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Identify the area of the system impacted by the event.
     * </pre>
     *
     * Protobuf type {@code event.EventCategory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventCategory)
        org.opencord.voltha.events.Events.EventCategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventCategory_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventCategory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventCategory.class, org.opencord.voltha.events.Events.EventCategory.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventCategory_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventCategory getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventCategory.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventCategory build() {
        org.opencord.voltha.events.Events.EventCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventCategory buildPartial() {
        org.opencord.voltha.events.Events.EventCategory result = new org.opencord.voltha.events.Events.EventCategory(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventCategory) {
          return mergeFrom((org.opencord.voltha.events.Events.EventCategory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventCategory other) {
        if (other == org.opencord.voltha.events.Events.EventCategory.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventCategory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventCategory) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventCategory)
    }

    // @@protoc_insertion_point(class_scope:event.EventCategory)
    private static final org.opencord.voltha.events.Events.EventCategory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventCategory();
    }

    public static org.opencord.voltha.events.Events.EventCategory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventCategory>
        PARSER = new com.google.protobuf.AbstractParser<EventCategory>() {
      @java.lang.Override
      public EventCategory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventCategory(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventCategory> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventCategory> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventCategory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventSubCategoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventSubCategory)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Identify the functional category originating the event
   * </pre>
   *
   * Protobuf type {@code event.EventSubCategory}
   */
  public  static final class EventSubCategory extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventSubCategory)
      EventSubCategoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventSubCategory.newBuilder() to construct.
    private EventSubCategory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventSubCategory() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventSubCategory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventSubCategory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventSubCategory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventSubCategory.class, org.opencord.voltha.events.Events.EventSubCategory.Builder.class);
    }

    /**
     * Protobuf enum {@code event.EventSubCategory.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PON = 0;</code>
       */
      PON(0),
      /**
       * <code>OLT = 1;</code>
       */
      OLT(1),
      /**
       * <code>ONT = 2;</code>
       */
      ONT(2),
      /**
       * <code>ONU = 3;</code>
       */
      ONU(3),
      /**
       * <code>NNI = 4;</code>
       */
      NNI(4),
      /**
       * <pre>
       *Adding None for RPC Events
       * </pre>
       *
       * <code>NONE = 5;</code>
       */
      NONE(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PON = 0;</code>
       */
      public static final int PON_VALUE = 0;
      /**
       * <code>OLT = 1;</code>
       */
      public static final int OLT_VALUE = 1;
      /**
       * <code>ONT = 2;</code>
       */
      public static final int ONT_VALUE = 2;
      /**
       * <code>ONU = 3;</code>
       */
      public static final int ONU_VALUE = 3;
      /**
       * <code>NNI = 4;</code>
       */
      public static final int NNI_VALUE = 4;
      /**
       * <pre>
       *Adding None for RPC Events
       * </pre>
       *
       * <code>NONE = 5;</code>
       */
      public static final int NONE_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Types valueOf(int value) {
        return forNumber(value);
      }

      public static Types forNumber(int value) {
        switch (value) {
          case 0: return PON;
          case 1: return OLT;
          case 2: return ONT;
          case 3: return ONU;
          case 4: return NNI;
          case 5: return NONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Types> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.EventSubCategory.getDescriptor().getEnumTypes().get(0);
      }

      private static final Types[] VALUES = values();

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Types(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:event.EventSubCategory.Types)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventSubCategory)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventSubCategory other = (org.opencord.voltha.events.Events.EventSubCategory) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventSubCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventSubCategory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Identify the functional category originating the event
     * </pre>
     *
     * Protobuf type {@code event.EventSubCategory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventSubCategory)
        org.opencord.voltha.events.Events.EventSubCategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventSubCategory_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventSubCategory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventSubCategory.class, org.opencord.voltha.events.Events.EventSubCategory.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventSubCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventSubCategory_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventSubCategory getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventSubCategory.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventSubCategory build() {
        org.opencord.voltha.events.Events.EventSubCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventSubCategory buildPartial() {
        org.opencord.voltha.events.Events.EventSubCategory result = new org.opencord.voltha.events.Events.EventSubCategory(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventSubCategory) {
          return mergeFrom((org.opencord.voltha.events.Events.EventSubCategory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventSubCategory other) {
        if (other == org.opencord.voltha.events.Events.EventSubCategory.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventSubCategory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventSubCategory) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventSubCategory)
    }

    // @@protoc_insertion_point(class_scope:event.EventSubCategory)
    private static final org.opencord.voltha.events.Events.EventSubCategory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventSubCategory();
    }

    public static org.opencord.voltha.events.Events.EventSubCategory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventSubCategory>
        PARSER = new com.google.protobuf.AbstractParser<EventSubCategory>() {
      @java.lang.Override
      public EventSubCategory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventSubCategory(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventSubCategory> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventSubCategory> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventSubCategory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventType)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Identify the type of event
   * </pre>
   *
   * Protobuf type {@code event.EventType}
   */
  public  static final class EventType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventType)
      EventTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventType.newBuilder() to construct.
    private EventType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventType() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventType.class, org.opencord.voltha.events.Events.EventType.Builder.class);
    }

    /**
     * Protobuf enum {@code event.EventType.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CONFIG_EVENT = 0;</code>
       */
      CONFIG_EVENT(0),
      /**
       * <code>KPI_EVENT = 1;</code>
       */
      KPI_EVENT(1),
      /**
       * <code>KPI_EVENT2 = 2;</code>
       */
      KPI_EVENT2(2),
      /**
       * <code>DEVICE_EVENT = 3;</code>
       */
      DEVICE_EVENT(3),
      /**
       * <code>RPC_EVENT = 4;</code>
       */
      RPC_EVENT(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CONFIG_EVENT = 0;</code>
       */
      public static final int CONFIG_EVENT_VALUE = 0;
      /**
       * <code>KPI_EVENT = 1;</code>
       */
      public static final int KPI_EVENT_VALUE = 1;
      /**
       * <code>KPI_EVENT2 = 2;</code>
       */
      public static final int KPI_EVENT2_VALUE = 2;
      /**
       * <code>DEVICE_EVENT = 3;</code>
       */
      public static final int DEVICE_EVENT_VALUE = 3;
      /**
       * <code>RPC_EVENT = 4;</code>
       */
      public static final int RPC_EVENT_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Types valueOf(int value) {
        return forNumber(value);
      }

      public static Types forNumber(int value) {
        switch (value) {
          case 0: return CONFIG_EVENT;
          case 1: return KPI_EVENT;
          case 2: return KPI_EVENT2;
          case 3: return DEVICE_EVENT;
          case 4: return RPC_EVENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Types> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.EventType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Types[] VALUES = values();

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Types(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:event.EventType.Types)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventType)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventType other = (org.opencord.voltha.events.Events.EventType) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Identify the type of event
     * </pre>
     *
     * Protobuf type {@code event.EventType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventType)
        org.opencord.voltha.events.Events.EventTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventType.class, org.opencord.voltha.events.Events.EventType.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventType_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventType getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventType.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventType build() {
        org.opencord.voltha.events.Events.EventType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventType buildPartial() {
        org.opencord.voltha.events.Events.EventType result = new org.opencord.voltha.events.Events.EventType(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventType) {
          return mergeFrom((org.opencord.voltha.events.Events.EventType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventType other) {
        if (other == org.opencord.voltha.events.Events.EventType.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventType)
    }

    // @@protoc_insertion_point(class_scope:event.EventType)
    private static final org.opencord.voltha.events.Events.EventType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventType();
    }

    public static org.opencord.voltha.events.Events.EventType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventType>
        PARSER = new com.google.protobuf.AbstractParser<EventType>() {
      @java.lang.Override
      public EventType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.EventHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ID for this event.  e.g. voltha.some_olt.1234
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * Unique ID for this event.  e.g. voltha.some_olt.1234
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Refers to the functional area affect by the event
     * </pre>
     *
     * <code>.event.EventCategory.Types category = 2;</code>
     */
    int getCategoryValue();
    /**
     * <pre>
     * Refers to the functional area affect by the event
     * </pre>
     *
     * <code>.event.EventCategory.Types category = 2;</code>
     */
    org.opencord.voltha.events.Events.EventCategory.Types getCategory();

    /**
     * <pre>
     * Refers to functional category of the event
     * </pre>
     *
     * <code>.event.EventSubCategory.Types sub_category = 3;</code>
     */
    int getSubCategoryValue();
    /**
     * <pre>
     * Refers to functional category of the event
     * </pre>
     *
     * <code>.event.EventSubCategory.Types sub_category = 3;</code>
     */
    org.opencord.voltha.events.Events.EventSubCategory.Types getSubCategory();

    /**
     * <pre>
     * Refers to the type of the event
     * </pre>
     *
     * <code>.event.EventType.Types type = 4;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Refers to the type of the event
     * </pre>
     *
     * <code>.event.EventType.Types type = 4;</code>
     */
    org.opencord.voltha.events.Events.EventType.Types getType();

    /**
     * <pre>
     * The version identifier for this event type, thus allowing each
     * event type to evolve independently. The version should be in the
     * format “MAJOR.MINOR” format and minor changes must only be additive
     * and non-breaking.
     * </pre>
     *
     * <code>string type_version = 5;</code>
     */
    java.lang.String getTypeVersion();
    /**
     * <pre>
     * The version identifier for this event type, thus allowing each
     * event type to evolve independently. The version should be in the
     * format “MAJOR.MINOR” format and minor changes must only be additive
     * and non-breaking.
     * </pre>
     *
     * <code>string type_version = 5;</code>
     */
    com.google.protobuf.ByteString
        getTypeVersionBytes();

    /**
     * <pre>
     * Timestamp at which the event was first raised.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was first raised from the source entity.
     * If the source entity doesn't send the raised_ts, this shall be set
     * to timestamp when the event was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
     */
    boolean hasRaisedTs();
    /**
     * <pre>
     * Timestamp at which the event was first raised.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was first raised from the source entity.
     * If the source entity doesn't send the raised_ts, this shall be set
     * to timestamp when the event was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
     */
    com.google.protobuf.Timestamp getRaisedTs();
    /**
     * <pre>
     * Timestamp at which the event was first raised.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was first raised from the source entity.
     * If the source entity doesn't send the raised_ts, this shall be set
     * to timestamp when the event was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getRaisedTsOrBuilder();

    /**
     * <pre>
     * Timestamp at which the event was reported.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was reported (this time stamp is &gt;= raised_ts).
     * If the source entity that reported this event doesn't send the 
     * reported_ts, this shall be set to the same value as raised_ts.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
     */
    boolean hasReportedTs();
    /**
     * <pre>
     * Timestamp at which the event was reported.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was reported (this time stamp is &gt;= raised_ts).
     * If the source entity that reported this event doesn't send the 
     * reported_ts, this shall be set to the same value as raised_ts.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
     */
    com.google.protobuf.Timestamp getReportedTs();
    /**
     * <pre>
     * Timestamp at which the event was reported.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was reported (this time stamp is &gt;= raised_ts).
     * If the source entity that reported this event doesn't send the 
     * reported_ts, this shall be set to the same value as raised_ts.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
     */
    com.google.protobuf.TimestampOrBuilder getReportedTsOrBuilder();
  }
  /**
   * <pre>
   * Identify the functional category originating the event
   * </pre>
   *
   * Protobuf type {@code event.EventHeader}
   */
  public  static final class EventHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.EventHeader)
      EventHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventHeader.newBuilder() to construct.
    private EventHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventHeader() {
      id_ = "";
      category_ = 0;
      subCategory_ = 0;
      type_ = 0;
      typeVersion_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              category_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              subCategory_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              typeVersion_ = s;
              break;
            }
            case 50: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (raisedTs_ != null) {
                subBuilder = raisedTs_.toBuilder();
              }
              raisedTs_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(raisedTs_);
                raisedTs_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (reportedTs_ != null) {
                subBuilder = reportedTs_.toBuilder();
              }
              reportedTs_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reportedTs_);
                reportedTs_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_EventHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_EventHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.EventHeader.class, org.opencord.voltha.events.Events.EventHeader.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Unique ID for this event.  e.g. voltha.some_olt.1234
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique ID for this event.  e.g. voltha.some_olt.1234
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 2;
    private int category_;
    /**
     * <pre>
     * Refers to the functional area affect by the event
     * </pre>
     *
     * <code>.event.EventCategory.Types category = 2;</code>
     */
    public int getCategoryValue() {
      return category_;
    }
    /**
     * <pre>
     * Refers to the functional area affect by the event
     * </pre>
     *
     * <code>.event.EventCategory.Types category = 2;</code>
     */
    public org.opencord.voltha.events.Events.EventCategory.Types getCategory() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.EventCategory.Types result = org.opencord.voltha.events.Events.EventCategory.Types.valueOf(category_);
      return result == null ? org.opencord.voltha.events.Events.EventCategory.Types.UNRECOGNIZED : result;
    }

    public static final int SUB_CATEGORY_FIELD_NUMBER = 3;
    private int subCategory_;
    /**
     * <pre>
     * Refers to functional category of the event
     * </pre>
     *
     * <code>.event.EventSubCategory.Types sub_category = 3;</code>
     */
    public int getSubCategoryValue() {
      return subCategory_;
    }
    /**
     * <pre>
     * Refers to functional category of the event
     * </pre>
     *
     * <code>.event.EventSubCategory.Types sub_category = 3;</code>
     */
    public org.opencord.voltha.events.Events.EventSubCategory.Types getSubCategory() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.EventSubCategory.Types result = org.opencord.voltha.events.Events.EventSubCategory.Types.valueOf(subCategory_);
      return result == null ? org.opencord.voltha.events.Events.EventSubCategory.Types.UNRECOGNIZED : result;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <pre>
     * Refers to the type of the event
     * </pre>
     *
     * <code>.event.EventType.Types type = 4;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Refers to the type of the event
     * </pre>
     *
     * <code>.event.EventType.Types type = 4;</code>
     */
    public org.opencord.voltha.events.Events.EventType.Types getType() {
      @SuppressWarnings("deprecation")
      org.opencord.voltha.events.Events.EventType.Types result = org.opencord.voltha.events.Events.EventType.Types.valueOf(type_);
      return result == null ? org.opencord.voltha.events.Events.EventType.Types.UNRECOGNIZED : result;
    }

    public static final int TYPE_VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object typeVersion_;
    /**
     * <pre>
     * The version identifier for this event type, thus allowing each
     * event type to evolve independently. The version should be in the
     * format “MAJOR.MINOR” format and minor changes must only be additive
     * and non-breaking.
     * </pre>
     *
     * <code>string type_version = 5;</code>
     */
    public java.lang.String getTypeVersion() {
      java.lang.Object ref = typeVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The version identifier for this event type, thus allowing each
     * event type to evolve independently. The version should be in the
     * format “MAJOR.MINOR” format and minor changes must only be additive
     * and non-breaking.
     * </pre>
     *
     * <code>string type_version = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTypeVersionBytes() {
      java.lang.Object ref = typeVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAISED_TS_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp raisedTs_;
    /**
     * <pre>
     * Timestamp at which the event was first raised.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was first raised from the source entity.
     * If the source entity doesn't send the raised_ts, this shall be set
     * to timestamp when the event was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
     */
    public boolean hasRaisedTs() {
      return raisedTs_ != null;
    }
    /**
     * <pre>
     * Timestamp at which the event was first raised.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was first raised from the source entity.
     * If the source entity doesn't send the raised_ts, this shall be set
     * to timestamp when the event was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
     */
    public com.google.protobuf.Timestamp getRaisedTs() {
      return raisedTs_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : raisedTs_;
    }
    /**
     * <pre>
     * Timestamp at which the event was first raised.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was first raised from the source entity.
     * If the source entity doesn't send the raised_ts, this shall be set
     * to timestamp when the event was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getRaisedTsOrBuilder() {
      return getRaisedTs();
    }

    public static final int REPORTED_TS_FIELD_NUMBER = 7;
    private com.google.protobuf.Timestamp reportedTs_;
    /**
     * <pre>
     * Timestamp at which the event was reported.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was reported (this time stamp is &gt;= raised_ts).
     * If the source entity that reported this event doesn't send the 
     * reported_ts, this shall be set to the same value as raised_ts.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
     */
    public boolean hasReportedTs() {
      return reportedTs_ != null;
    }
    /**
     * <pre>
     * Timestamp at which the event was reported.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was reported (this time stamp is &gt;= raised_ts).
     * If the source entity that reported this event doesn't send the 
     * reported_ts, this shall be set to the same value as raised_ts.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
     */
    public com.google.protobuf.Timestamp getReportedTs() {
      return reportedTs_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : reportedTs_;
    }
    /**
     * <pre>
     * Timestamp at which the event was reported.
     * This represents the UTC time stamp since epoch (in seconds) when the
     * the event was reported (this time stamp is &gt;= raised_ts).
     * If the source entity that reported this event doesn't send the 
     * reported_ts, this shall be set to the same value as raised_ts.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getReportedTsOrBuilder() {
      return getReportedTs();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (category_ != org.opencord.voltha.events.Events.EventCategory.Types.COMMUNICATION.getNumber()) {
        output.writeEnum(2, category_);
      }
      if (subCategory_ != org.opencord.voltha.events.Events.EventSubCategory.Types.PON.getNumber()) {
        output.writeEnum(3, subCategory_);
      }
      if (type_ != org.opencord.voltha.events.Events.EventType.Types.CONFIG_EVENT.getNumber()) {
        output.writeEnum(4, type_);
      }
      if (!getTypeVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, typeVersion_);
      }
      if (raisedTs_ != null) {
        output.writeMessage(6, getRaisedTs());
      }
      if (reportedTs_ != null) {
        output.writeMessage(7, getReportedTs());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (category_ != org.opencord.voltha.events.Events.EventCategory.Types.COMMUNICATION.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, category_);
      }
      if (subCategory_ != org.opencord.voltha.events.Events.EventSubCategory.Types.PON.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, subCategory_);
      }
      if (type_ != org.opencord.voltha.events.Events.EventType.Types.CONFIG_EVENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_);
      }
      if (!getTypeVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, typeVersion_);
      }
      if (raisedTs_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRaisedTs());
      }
      if (reportedTs_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getReportedTs());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.EventHeader)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.EventHeader other = (org.opencord.voltha.events.Events.EventHeader) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (category_ != other.category_) return false;
      if (subCategory_ != other.subCategory_) return false;
      if (type_ != other.type_) return false;
      if (!getTypeVersion()
          .equals(other.getTypeVersion())) return false;
      if (hasRaisedTs() != other.hasRaisedTs()) return false;
      if (hasRaisedTs()) {
        if (!getRaisedTs()
            .equals(other.getRaisedTs())) return false;
      }
      if (hasReportedTs() != other.hasReportedTs()) return false;
      if (hasReportedTs()) {
        if (!getReportedTs()
            .equals(other.getReportedTs())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
      hash = (53 * hash) + category_;
      hash = (37 * hash) + SUB_CATEGORY_FIELD_NUMBER;
      hash = (53 * hash) + subCategory_;
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TYPE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getTypeVersion().hashCode();
      if (hasRaisedTs()) {
        hash = (37 * hash) + RAISED_TS_FIELD_NUMBER;
        hash = (53 * hash) + getRaisedTs().hashCode();
      }
      if (hasReportedTs()) {
        hash = (37 * hash) + REPORTED_TS_FIELD_NUMBER;
        hash = (53 * hash) + getReportedTs().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.EventHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.EventHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Identify the functional category originating the event
     * </pre>
     *
     * Protobuf type {@code event.EventHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.EventHeader)
        org.opencord.voltha.events.Events.EventHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_EventHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_EventHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.EventHeader.class, org.opencord.voltha.events.Events.EventHeader.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.EventHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        category_ = 0;

        subCategory_ = 0;

        type_ = 0;

        typeVersion_ = "";

        if (raisedTsBuilder_ == null) {
          raisedTs_ = null;
        } else {
          raisedTs_ = null;
          raisedTsBuilder_ = null;
        }
        if (reportedTsBuilder_ == null) {
          reportedTs_ = null;
        } else {
          reportedTs_ = null;
          reportedTsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_EventHeader_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventHeader getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.EventHeader.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventHeader build() {
        org.opencord.voltha.events.Events.EventHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.EventHeader buildPartial() {
        org.opencord.voltha.events.Events.EventHeader result = new org.opencord.voltha.events.Events.EventHeader(this);
        result.id_ = id_;
        result.category_ = category_;
        result.subCategory_ = subCategory_;
        result.type_ = type_;
        result.typeVersion_ = typeVersion_;
        if (raisedTsBuilder_ == null) {
          result.raisedTs_ = raisedTs_;
        } else {
          result.raisedTs_ = raisedTsBuilder_.build();
        }
        if (reportedTsBuilder_ == null) {
          result.reportedTs_ = reportedTs_;
        } else {
          result.reportedTs_ = reportedTsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.EventHeader) {
          return mergeFrom((org.opencord.voltha.events.Events.EventHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.EventHeader other) {
        if (other == org.opencord.voltha.events.Events.EventHeader.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.category_ != 0) {
          setCategoryValue(other.getCategoryValue());
        }
        if (other.subCategory_ != 0) {
          setSubCategoryValue(other.getSubCategoryValue());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getTypeVersion().isEmpty()) {
          typeVersion_ = other.typeVersion_;
          onChanged();
        }
        if (other.hasRaisedTs()) {
          mergeRaisedTs(other.getRaisedTs());
        }
        if (other.hasReportedTs()) {
          mergeReportedTs(other.getReportedTs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.EventHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.EventHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Unique ID for this event.  e.g. voltha.some_olt.1234
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique ID for this event.  e.g. voltha.some_olt.1234
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique ID for this event.  e.g. voltha.some_olt.1234
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID for this event.  e.g. voltha.some_olt.1234
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID for this event.  e.g. voltha.some_olt.1234
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int category_ = 0;
      /**
       * <pre>
       * Refers to the functional area affect by the event
       * </pre>
       *
       * <code>.event.EventCategory.Types category = 2;</code>
       */
      public int getCategoryValue() {
        return category_;
      }
      /**
       * <pre>
       * Refers to the functional area affect by the event
       * </pre>
       *
       * <code>.event.EventCategory.Types category = 2;</code>
       */
      public Builder setCategoryValue(int value) {
        category_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refers to the functional area affect by the event
       * </pre>
       *
       * <code>.event.EventCategory.Types category = 2;</code>
       */
      public org.opencord.voltha.events.Events.EventCategory.Types getCategory() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.EventCategory.Types result = org.opencord.voltha.events.Events.EventCategory.Types.valueOf(category_);
        return result == null ? org.opencord.voltha.events.Events.EventCategory.Types.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Refers to the functional area affect by the event
       * </pre>
       *
       * <code>.event.EventCategory.Types category = 2;</code>
       */
      public Builder setCategory(org.opencord.voltha.events.Events.EventCategory.Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        category_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refers to the functional area affect by the event
       * </pre>
       *
       * <code>.event.EventCategory.Types category = 2;</code>
       */
      public Builder clearCategory() {
        
        category_ = 0;
        onChanged();
        return this;
      }

      private int subCategory_ = 0;
      /**
       * <pre>
       * Refers to functional category of the event
       * </pre>
       *
       * <code>.event.EventSubCategory.Types sub_category = 3;</code>
       */
      public int getSubCategoryValue() {
        return subCategory_;
      }
      /**
       * <pre>
       * Refers to functional category of the event
       * </pre>
       *
       * <code>.event.EventSubCategory.Types sub_category = 3;</code>
       */
      public Builder setSubCategoryValue(int value) {
        subCategory_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refers to functional category of the event
       * </pre>
       *
       * <code>.event.EventSubCategory.Types sub_category = 3;</code>
       */
      public org.opencord.voltha.events.Events.EventSubCategory.Types getSubCategory() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.EventSubCategory.Types result = org.opencord.voltha.events.Events.EventSubCategory.Types.valueOf(subCategory_);
        return result == null ? org.opencord.voltha.events.Events.EventSubCategory.Types.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Refers to functional category of the event
       * </pre>
       *
       * <code>.event.EventSubCategory.Types sub_category = 3;</code>
       */
      public Builder setSubCategory(org.opencord.voltha.events.Events.EventSubCategory.Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        subCategory_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refers to functional category of the event
       * </pre>
       *
       * <code>.event.EventSubCategory.Types sub_category = 3;</code>
       */
      public Builder clearSubCategory() {
        
        subCategory_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Refers to the type of the event
       * </pre>
       *
       * <code>.event.EventType.Types type = 4;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Refers to the type of the event
       * </pre>
       *
       * <code>.event.EventType.Types type = 4;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refers to the type of the event
       * </pre>
       *
       * <code>.event.EventType.Types type = 4;</code>
       */
      public org.opencord.voltha.events.Events.EventType.Types getType() {
        @SuppressWarnings("deprecation")
        org.opencord.voltha.events.Events.EventType.Types result = org.opencord.voltha.events.Events.EventType.Types.valueOf(type_);
        return result == null ? org.opencord.voltha.events.Events.EventType.Types.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Refers to the type of the event
       * </pre>
       *
       * <code>.event.EventType.Types type = 4;</code>
       */
      public Builder setType(org.opencord.voltha.events.Events.EventType.Types value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Refers to the type of the event
       * </pre>
       *
       * <code>.event.EventType.Types type = 4;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object typeVersion_ = "";
      /**
       * <pre>
       * The version identifier for this event type, thus allowing each
       * event type to evolve independently. The version should be in the
       * format “MAJOR.MINOR” format and minor changes must only be additive
       * and non-breaking.
       * </pre>
       *
       * <code>string type_version = 5;</code>
       */
      public java.lang.String getTypeVersion() {
        java.lang.Object ref = typeVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          typeVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The version identifier for this event type, thus allowing each
       * event type to evolve independently. The version should be in the
       * format “MAJOR.MINOR” format and minor changes must only be additive
       * and non-breaking.
       * </pre>
       *
       * <code>string type_version = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTypeVersionBytes() {
        java.lang.Object ref = typeVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The version identifier for this event type, thus allowing each
       * event type to evolve independently. The version should be in the
       * format “MAJOR.MINOR” format and minor changes must only be additive
       * and non-breaking.
       * </pre>
       *
       * <code>string type_version = 5;</code>
       */
      public Builder setTypeVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        typeVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version identifier for this event type, thus allowing each
       * event type to evolve independently. The version should be in the
       * format “MAJOR.MINOR” format and minor changes must only be additive
       * and non-breaking.
       * </pre>
       *
       * <code>string type_version = 5;</code>
       */
      public Builder clearTypeVersion() {
        
        typeVersion_ = getDefaultInstance().getTypeVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version identifier for this event type, thus allowing each
       * event type to evolve independently. The version should be in the
       * format “MAJOR.MINOR” format and minor changes must only be additive
       * and non-breaking.
       * </pre>
       *
       * <code>string type_version = 5;</code>
       */
      public Builder setTypeVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        typeVersion_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp raisedTs_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> raisedTsBuilder_;
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public boolean hasRaisedTs() {
        return raisedTsBuilder_ != null || raisedTs_ != null;
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public com.google.protobuf.Timestamp getRaisedTs() {
        if (raisedTsBuilder_ == null) {
          return raisedTs_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : raisedTs_;
        } else {
          return raisedTsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public Builder setRaisedTs(com.google.protobuf.Timestamp value) {
        if (raisedTsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          raisedTs_ = value;
          onChanged();
        } else {
          raisedTsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public Builder setRaisedTs(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (raisedTsBuilder_ == null) {
          raisedTs_ = builderForValue.build();
          onChanged();
        } else {
          raisedTsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public Builder mergeRaisedTs(com.google.protobuf.Timestamp value) {
        if (raisedTsBuilder_ == null) {
          if (raisedTs_ != null) {
            raisedTs_ =
              com.google.protobuf.Timestamp.newBuilder(raisedTs_).mergeFrom(value).buildPartial();
          } else {
            raisedTs_ = value;
          }
          onChanged();
        } else {
          raisedTsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public Builder clearRaisedTs() {
        if (raisedTsBuilder_ == null) {
          raisedTs_ = null;
          onChanged();
        } else {
          raisedTs_ = null;
          raisedTsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public com.google.protobuf.Timestamp.Builder getRaisedTsBuilder() {
        
        onChanged();
        return getRaisedTsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getRaisedTsOrBuilder() {
        if (raisedTsBuilder_ != null) {
          return raisedTsBuilder_.getMessageOrBuilder();
        } else {
          return raisedTs_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : raisedTs_;
        }
      }
      /**
       * <pre>
       * Timestamp at which the event was first raised.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was first raised from the source entity.
       * If the source entity doesn't send the raised_ts, this shall be set
       * to timestamp when the event was received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp raised_ts = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getRaisedTsFieldBuilder() {
        if (raisedTsBuilder_ == null) {
          raisedTsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getRaisedTs(),
                  getParentForChildren(),
                  isClean());
          raisedTs_ = null;
        }
        return raisedTsBuilder_;
      }

      private com.google.protobuf.Timestamp reportedTs_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> reportedTsBuilder_;
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public boolean hasReportedTs() {
        return reportedTsBuilder_ != null || reportedTs_ != null;
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public com.google.protobuf.Timestamp getReportedTs() {
        if (reportedTsBuilder_ == null) {
          return reportedTs_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : reportedTs_;
        } else {
          return reportedTsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public Builder setReportedTs(com.google.protobuf.Timestamp value) {
        if (reportedTsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reportedTs_ = value;
          onChanged();
        } else {
          reportedTsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public Builder setReportedTs(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (reportedTsBuilder_ == null) {
          reportedTs_ = builderForValue.build();
          onChanged();
        } else {
          reportedTsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public Builder mergeReportedTs(com.google.protobuf.Timestamp value) {
        if (reportedTsBuilder_ == null) {
          if (reportedTs_ != null) {
            reportedTs_ =
              com.google.protobuf.Timestamp.newBuilder(reportedTs_).mergeFrom(value).buildPartial();
          } else {
            reportedTs_ = value;
          }
          onChanged();
        } else {
          reportedTsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public Builder clearReportedTs() {
        if (reportedTsBuilder_ == null) {
          reportedTs_ = null;
          onChanged();
        } else {
          reportedTs_ = null;
          reportedTsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public com.google.protobuf.Timestamp.Builder getReportedTsBuilder() {
        
        onChanged();
        return getReportedTsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getReportedTsOrBuilder() {
        if (reportedTsBuilder_ != null) {
          return reportedTsBuilder_.getMessageOrBuilder();
        } else {
          return reportedTs_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : reportedTs_;
        }
      }
      /**
       * <pre>
       * Timestamp at which the event was reported.
       * This represents the UTC time stamp since epoch (in seconds) when the
       * the event was reported (this time stamp is &gt;= raised_ts).
       * If the source entity that reported this event doesn't send the 
       * reported_ts, this shall be set to the same value as raised_ts.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp reported_ts = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getReportedTsFieldBuilder() {
        if (reportedTsBuilder_ == null) {
          reportedTsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getReportedTs(),
                  getParentForChildren(),
                  isClean());
          reportedTs_ = null;
        }
        return reportedTsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.EventHeader)
    }

    // @@protoc_insertion_point(class_scope:event.EventHeader)
    private static final org.opencord.voltha.events.Events.EventHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.EventHeader();
    }

    public static org.opencord.voltha.events.Events.EventHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventHeader>
        PARSER = new com.google.protobuf.AbstractParser<EventHeader>() {
      @java.lang.Override
      public EventHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.EventHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event.Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * event header
     * </pre>
     *
     * <code>.event.EventHeader header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <pre>
     * event header
     * </pre>
     *
     * <code>.event.EventHeader header = 1;</code>
     */
    org.opencord.voltha.events.Events.EventHeader getHeader();
    /**
     * <pre>
     * event header
     * </pre>
     *
     * <code>.event.EventHeader header = 1;</code>
     */
    org.opencord.voltha.events.Events.EventHeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * Refers to ConfigEvent
     * </pre>
     *
     * <code>.event.ConfigEvent config_event = 2;</code>
     */
    boolean hasConfigEvent();
    /**
     * <pre>
     * Refers to ConfigEvent
     * </pre>
     *
     * <code>.event.ConfigEvent config_event = 2;</code>
     */
    org.opencord.voltha.events.Events.ConfigEvent getConfigEvent();
    /**
     * <pre>
     * Refers to ConfigEvent
     * </pre>
     *
     * <code>.event.ConfigEvent config_event = 2;</code>
     */
    org.opencord.voltha.events.Events.ConfigEventOrBuilder getConfigEventOrBuilder();

    /**
     * <pre>
     * Refers to KpiEvent
     * </pre>
     *
     * <code>.event.KpiEvent kpi_event = 3;</code>
     */
    boolean hasKpiEvent();
    /**
     * <pre>
     * Refers to KpiEvent
     * </pre>
     *
     * <code>.event.KpiEvent kpi_event = 3;</code>
     */
    org.opencord.voltha.events.Events.KpiEvent getKpiEvent();
    /**
     * <pre>
     * Refers to KpiEvent
     * </pre>
     *
     * <code>.event.KpiEvent kpi_event = 3;</code>
     */
    org.opencord.voltha.events.Events.KpiEventOrBuilder getKpiEventOrBuilder();

    /**
     * <pre>
     * Refers to KpiEvent2
     * </pre>
     *
     * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
     */
    boolean hasKpiEvent2();
    /**
     * <pre>
     * Refers to KpiEvent2
     * </pre>
     *
     * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
     */
    org.opencord.voltha.events.Events.KpiEvent2 getKpiEvent2();
    /**
     * <pre>
     * Refers to KpiEvent2
     * </pre>
     *
     * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
     */
    org.opencord.voltha.events.Events.KpiEvent2OrBuilder getKpiEvent2OrBuilder();

    /**
     * <pre>
     * Refers to DeviceEvent
     * </pre>
     *
     * <code>.event.DeviceEvent device_event = 5;</code>
     */
    boolean hasDeviceEvent();
    /**
     * <pre>
     * Refers to DeviceEvent
     * </pre>
     *
     * <code>.event.DeviceEvent device_event = 5;</code>
     */
    org.opencord.voltha.events.Events.DeviceEvent getDeviceEvent();
    /**
     * <pre>
     * Refers to DeviceEvent
     * </pre>
     *
     * <code>.event.DeviceEvent device_event = 5;</code>
     */
    org.opencord.voltha.events.Events.DeviceEventOrBuilder getDeviceEventOrBuilder();

    /**
     * <pre>
     * Refers to an RPC Event
     * </pre>
     *
     * <code>.event.RPCEvent rpc_event = 6;</code>
     */
    boolean hasRpcEvent();
    /**
     * <pre>
     * Refers to an RPC Event
     * </pre>
     *
     * <code>.event.RPCEvent rpc_event = 6;</code>
     */
    org.opencord.voltha.events.Events.RPCEvent getRpcEvent();
    /**
     * <pre>
     * Refers to an RPC Event
     * </pre>
     *
     * <code>.event.RPCEvent rpc_event = 6;</code>
     */
    org.opencord.voltha.events.Events.RPCEventOrBuilder getRpcEventOrBuilder();

    public org.opencord.voltha.events.Events.Event.EventTypeCase getEventTypeCase();
  }
  /**
   * <pre>
   * Event Structure
   * </pre>
   *
   * Protobuf type {@code event.Event}
   */
  public  static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event.Event)
      EventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.opencord.voltha.events.Events.EventHeader.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(org.opencord.voltha.events.Events.EventHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.opencord.voltha.events.Events.ConfigEvent.Builder subBuilder = null;
              if (eventTypeCase_ == 2) {
                subBuilder = ((org.opencord.voltha.events.Events.ConfigEvent) eventType_).toBuilder();
              }
              eventType_ =
                  input.readMessage(org.opencord.voltha.events.Events.ConfigEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.events.Events.ConfigEvent) eventType_);
                eventType_ = subBuilder.buildPartial();
              }
              eventTypeCase_ = 2;
              break;
            }
            case 26: {
              org.opencord.voltha.events.Events.KpiEvent.Builder subBuilder = null;
              if (eventTypeCase_ == 3) {
                subBuilder = ((org.opencord.voltha.events.Events.KpiEvent) eventType_).toBuilder();
              }
              eventType_ =
                  input.readMessage(org.opencord.voltha.events.Events.KpiEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.events.Events.KpiEvent) eventType_);
                eventType_ = subBuilder.buildPartial();
              }
              eventTypeCase_ = 3;
              break;
            }
            case 34: {
              org.opencord.voltha.events.Events.KpiEvent2.Builder subBuilder = null;
              if (eventTypeCase_ == 4) {
                subBuilder = ((org.opencord.voltha.events.Events.KpiEvent2) eventType_).toBuilder();
              }
              eventType_ =
                  input.readMessage(org.opencord.voltha.events.Events.KpiEvent2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.events.Events.KpiEvent2) eventType_);
                eventType_ = subBuilder.buildPartial();
              }
              eventTypeCase_ = 4;
              break;
            }
            case 42: {
              org.opencord.voltha.events.Events.DeviceEvent.Builder subBuilder = null;
              if (eventTypeCase_ == 5) {
                subBuilder = ((org.opencord.voltha.events.Events.DeviceEvent) eventType_).toBuilder();
              }
              eventType_ =
                  input.readMessage(org.opencord.voltha.events.Events.DeviceEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.events.Events.DeviceEvent) eventType_);
                eventType_ = subBuilder.buildPartial();
              }
              eventTypeCase_ = 5;
              break;
            }
            case 50: {
              org.opencord.voltha.events.Events.RPCEvent.Builder subBuilder = null;
              if (eventTypeCase_ == 6) {
                subBuilder = ((org.opencord.voltha.events.Events.RPCEvent) eventType_).toBuilder();
              }
              eventType_ =
                  input.readMessage(org.opencord.voltha.events.Events.RPCEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.opencord.voltha.events.Events.RPCEvent) eventType_);
                eventType_ = subBuilder.buildPartial();
              }
              eventTypeCase_ = 6;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencord.voltha.events.Events.internal_static_event_Event_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencord.voltha.events.Events.internal_static_event_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opencord.voltha.events.Events.Event.class, org.opencord.voltha.events.Events.Event.Builder.class);
    }

    private int eventTypeCase_ = 0;
    private java.lang.Object eventType_;
    public enum EventTypeCase
        implements com.google.protobuf.Internal.EnumLite {
      CONFIG_EVENT(2),
      KPI_EVENT(3),
      KPI_EVENT2(4),
      DEVICE_EVENT(5),
      RPC_EVENT(6),
      EVENTTYPE_NOT_SET(0);
      private final int value;
      private EventTypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventTypeCase forNumber(int value) {
        switch (value) {
          case 2: return CONFIG_EVENT;
          case 3: return KPI_EVENT;
          case 4: return KPI_EVENT2;
          case 5: return DEVICE_EVENT;
          case 6: return RPC_EVENT;
          case 0: return EVENTTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventTypeCase
    getEventTypeCase() {
      return EventTypeCase.forNumber(
          eventTypeCase_);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private org.opencord.voltha.events.Events.EventHeader header_;
    /**
     * <pre>
     * event header
     * </pre>
     *
     * <code>.event.EventHeader header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <pre>
     * event header
     * </pre>
     *
     * <code>.event.EventHeader header = 1;</code>
     */
    public org.opencord.voltha.events.Events.EventHeader getHeader() {
      return header_ == null ? org.opencord.voltha.events.Events.EventHeader.getDefaultInstance() : header_;
    }
    /**
     * <pre>
     * event header
     * </pre>
     *
     * <code>.event.EventHeader header = 1;</code>
     */
    public org.opencord.voltha.events.Events.EventHeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int CONFIG_EVENT_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Refers to ConfigEvent
     * </pre>
     *
     * <code>.event.ConfigEvent config_event = 2;</code>
     */
    public boolean hasConfigEvent() {
      return eventTypeCase_ == 2;
    }
    /**
     * <pre>
     * Refers to ConfigEvent
     * </pre>
     *
     * <code>.event.ConfigEvent config_event = 2;</code>
     */
    public org.opencord.voltha.events.Events.ConfigEvent getConfigEvent() {
      if (eventTypeCase_ == 2) {
         return (org.opencord.voltha.events.Events.ConfigEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
    }
    /**
     * <pre>
     * Refers to ConfigEvent
     * </pre>
     *
     * <code>.event.ConfigEvent config_event = 2;</code>
     */
    public org.opencord.voltha.events.Events.ConfigEventOrBuilder getConfigEventOrBuilder() {
      if (eventTypeCase_ == 2) {
         return (org.opencord.voltha.events.Events.ConfigEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
    }

    public static final int KPI_EVENT_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Refers to KpiEvent
     * </pre>
     *
     * <code>.event.KpiEvent kpi_event = 3;</code>
     */
    public boolean hasKpiEvent() {
      return eventTypeCase_ == 3;
    }
    /**
     * <pre>
     * Refers to KpiEvent
     * </pre>
     *
     * <code>.event.KpiEvent kpi_event = 3;</code>
     */
    public org.opencord.voltha.events.Events.KpiEvent getKpiEvent() {
      if (eventTypeCase_ == 3) {
         return (org.opencord.voltha.events.Events.KpiEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
    }
    /**
     * <pre>
     * Refers to KpiEvent
     * </pre>
     *
     * <code>.event.KpiEvent kpi_event = 3;</code>
     */
    public org.opencord.voltha.events.Events.KpiEventOrBuilder getKpiEventOrBuilder() {
      if (eventTypeCase_ == 3) {
         return (org.opencord.voltha.events.Events.KpiEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
    }

    public static final int KPI_EVENT2_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Refers to KpiEvent2
     * </pre>
     *
     * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
     */
    public boolean hasKpiEvent2() {
      return eventTypeCase_ == 4;
    }
    /**
     * <pre>
     * Refers to KpiEvent2
     * </pre>
     *
     * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
     */
    public org.opencord.voltha.events.Events.KpiEvent2 getKpiEvent2() {
      if (eventTypeCase_ == 4) {
         return (org.opencord.voltha.events.Events.KpiEvent2) eventType_;
      }
      return org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
    }
    /**
     * <pre>
     * Refers to KpiEvent2
     * </pre>
     *
     * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
     */
    public org.opencord.voltha.events.Events.KpiEvent2OrBuilder getKpiEvent2OrBuilder() {
      if (eventTypeCase_ == 4) {
         return (org.opencord.voltha.events.Events.KpiEvent2) eventType_;
      }
      return org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
    }

    public static final int DEVICE_EVENT_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Refers to DeviceEvent
     * </pre>
     *
     * <code>.event.DeviceEvent device_event = 5;</code>
     */
    public boolean hasDeviceEvent() {
      return eventTypeCase_ == 5;
    }
    /**
     * <pre>
     * Refers to DeviceEvent
     * </pre>
     *
     * <code>.event.DeviceEvent device_event = 5;</code>
     */
    public org.opencord.voltha.events.Events.DeviceEvent getDeviceEvent() {
      if (eventTypeCase_ == 5) {
         return (org.opencord.voltha.events.Events.DeviceEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
    }
    /**
     * <pre>
     * Refers to DeviceEvent
     * </pre>
     *
     * <code>.event.DeviceEvent device_event = 5;</code>
     */
    public org.opencord.voltha.events.Events.DeviceEventOrBuilder getDeviceEventOrBuilder() {
      if (eventTypeCase_ == 5) {
         return (org.opencord.voltha.events.Events.DeviceEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
    }

    public static final int RPC_EVENT_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Refers to an RPC Event
     * </pre>
     *
     * <code>.event.RPCEvent rpc_event = 6;</code>
     */
    public boolean hasRpcEvent() {
      return eventTypeCase_ == 6;
    }
    /**
     * <pre>
     * Refers to an RPC Event
     * </pre>
     *
     * <code>.event.RPCEvent rpc_event = 6;</code>
     */
    public org.opencord.voltha.events.Events.RPCEvent getRpcEvent() {
      if (eventTypeCase_ == 6) {
         return (org.opencord.voltha.events.Events.RPCEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
    }
    /**
     * <pre>
     * Refers to an RPC Event
     * </pre>
     *
     * <code>.event.RPCEvent rpc_event = 6;</code>
     */
    public org.opencord.voltha.events.Events.RPCEventOrBuilder getRpcEventOrBuilder() {
      if (eventTypeCase_ == 6) {
         return (org.opencord.voltha.events.Events.RPCEvent) eventType_;
      }
      return org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (eventTypeCase_ == 2) {
        output.writeMessage(2, (org.opencord.voltha.events.Events.ConfigEvent) eventType_);
      }
      if (eventTypeCase_ == 3) {
        output.writeMessage(3, (org.opencord.voltha.events.Events.KpiEvent) eventType_);
      }
      if (eventTypeCase_ == 4) {
        output.writeMessage(4, (org.opencord.voltha.events.Events.KpiEvent2) eventType_);
      }
      if (eventTypeCase_ == 5) {
        output.writeMessage(5, (org.opencord.voltha.events.Events.DeviceEvent) eventType_);
      }
      if (eventTypeCase_ == 6) {
        output.writeMessage(6, (org.opencord.voltha.events.Events.RPCEvent) eventType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (eventTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.opencord.voltha.events.Events.ConfigEvent) eventType_);
      }
      if (eventTypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.opencord.voltha.events.Events.KpiEvent) eventType_);
      }
      if (eventTypeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.opencord.voltha.events.Events.KpiEvent2) eventType_);
      }
      if (eventTypeCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.opencord.voltha.events.Events.DeviceEvent) eventType_);
      }
      if (eventTypeCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.opencord.voltha.events.Events.RPCEvent) eventType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.opencord.voltha.events.Events.Event)) {
        return super.equals(obj);
      }
      org.opencord.voltha.events.Events.Event other = (org.opencord.voltha.events.Events.Event) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (!getEventTypeCase().equals(other.getEventTypeCase())) return false;
      switch (eventTypeCase_) {
        case 2:
          if (!getConfigEvent()
              .equals(other.getConfigEvent())) return false;
          break;
        case 3:
          if (!getKpiEvent()
              .equals(other.getKpiEvent())) return false;
          break;
        case 4:
          if (!getKpiEvent2()
              .equals(other.getKpiEvent2())) return false;
          break;
        case 5:
          if (!getDeviceEvent()
              .equals(other.getDeviceEvent())) return false;
          break;
        case 6:
          if (!getRpcEvent()
              .equals(other.getRpcEvent())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      switch (eventTypeCase_) {
        case 2:
          hash = (37 * hash) + CONFIG_EVENT_FIELD_NUMBER;
          hash = (53 * hash) + getConfigEvent().hashCode();
          break;
        case 3:
          hash = (37 * hash) + KPI_EVENT_FIELD_NUMBER;
          hash = (53 * hash) + getKpiEvent().hashCode();
          break;
        case 4:
          hash = (37 * hash) + KPI_EVENT2_FIELD_NUMBER;
          hash = (53 * hash) + getKpiEvent2().hashCode();
          break;
        case 5:
          hash = (37 * hash) + DEVICE_EVENT_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceEvent().hashCode();
          break;
        case 6:
          hash = (37 * hash) + RPC_EVENT_FIELD_NUMBER;
          hash = (53 * hash) + getRpcEvent().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.opencord.voltha.events.Events.Event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.opencord.voltha.events.Events.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.opencord.voltha.events.Events.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Event Structure
     * </pre>
     *
     * Protobuf type {@code event.Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event.Event)
        org.opencord.voltha.events.Events.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.opencord.voltha.events.Events.internal_static_event_Event_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.opencord.voltha.events.Events.internal_static_event_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.opencord.voltha.events.Events.Event.class, org.opencord.voltha.events.Events.Event.Builder.class);
      }

      // Construct using org.opencord.voltha.events.Events.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        eventTypeCase_ = 0;
        eventType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.opencord.voltha.events.Events.internal_static_event_Event_descriptor;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.Event getDefaultInstanceForType() {
        return org.opencord.voltha.events.Events.Event.getDefaultInstance();
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.Event build() {
        org.opencord.voltha.events.Events.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.opencord.voltha.events.Events.Event buildPartial() {
        org.opencord.voltha.events.Events.Event result = new org.opencord.voltha.events.Events.Event(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (eventTypeCase_ == 2) {
          if (configEventBuilder_ == null) {
            result.eventType_ = eventType_;
          } else {
            result.eventType_ = configEventBuilder_.build();
          }
        }
        if (eventTypeCase_ == 3) {
          if (kpiEventBuilder_ == null) {
            result.eventType_ = eventType_;
          } else {
            result.eventType_ = kpiEventBuilder_.build();
          }
        }
        if (eventTypeCase_ == 4) {
          if (kpiEvent2Builder_ == null) {
            result.eventType_ = eventType_;
          } else {
            result.eventType_ = kpiEvent2Builder_.build();
          }
        }
        if (eventTypeCase_ == 5) {
          if (deviceEventBuilder_ == null) {
            result.eventType_ = eventType_;
          } else {
            result.eventType_ = deviceEventBuilder_.build();
          }
        }
        if (eventTypeCase_ == 6) {
          if (rpcEventBuilder_ == null) {
            result.eventType_ = eventType_;
          } else {
            result.eventType_ = rpcEventBuilder_.build();
          }
        }
        result.eventTypeCase_ = eventTypeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencord.voltha.events.Events.Event) {
          return mergeFrom((org.opencord.voltha.events.Events.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.opencord.voltha.events.Events.Event other) {
        if (other == org.opencord.voltha.events.Events.Event.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        switch (other.getEventTypeCase()) {
          case CONFIG_EVENT: {
            mergeConfigEvent(other.getConfigEvent());
            break;
          }
          case KPI_EVENT: {
            mergeKpiEvent(other.getKpiEvent());
            break;
          }
          case KPI_EVENT2: {
            mergeKpiEvent2(other.getKpiEvent2());
            break;
          }
          case DEVICE_EVENT: {
            mergeDeviceEvent(other.getDeviceEvent());
            break;
          }
          case RPC_EVENT: {
            mergeRpcEvent(other.getRpcEvent());
            break;
          }
          case EVENTTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.opencord.voltha.events.Events.Event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.opencord.voltha.events.Events.Event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int eventTypeCase_ = 0;
      private java.lang.Object eventType_;
      public EventTypeCase
          getEventTypeCase() {
        return EventTypeCase.forNumber(
            eventTypeCase_);
      }

      public Builder clearEventType() {
        eventTypeCase_ = 0;
        eventType_ = null;
        onChanged();
        return this;
      }


      private org.opencord.voltha.events.Events.EventHeader header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.EventHeader, org.opencord.voltha.events.Events.EventHeader.Builder, org.opencord.voltha.events.Events.EventHeaderOrBuilder> headerBuilder_;
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? org.opencord.voltha.events.Events.EventHeader.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public Builder setHeader(org.opencord.voltha.events.Events.EventHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public Builder setHeader(
          org.opencord.voltha.events.Events.EventHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public Builder mergeHeader(org.opencord.voltha.events.Events.EventHeader value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              org.opencord.voltha.events.Events.EventHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventHeader.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      public org.opencord.voltha.events.Events.EventHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              org.opencord.voltha.events.Events.EventHeader.getDefaultInstance() : header_;
        }
      }
      /**
       * <pre>
       * event header
       * </pre>
       *
       * <code>.event.EventHeader header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.EventHeader, org.opencord.voltha.events.Events.EventHeader.Builder, org.opencord.voltha.events.Events.EventHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.EventHeader, org.opencord.voltha.events.Events.EventHeader.Builder, org.opencord.voltha.events.Events.EventHeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.ConfigEvent, org.opencord.voltha.events.Events.ConfigEvent.Builder, org.opencord.voltha.events.Events.ConfigEventOrBuilder> configEventBuilder_;
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public boolean hasConfigEvent() {
        return eventTypeCase_ == 2;
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public org.opencord.voltha.events.Events.ConfigEvent getConfigEvent() {
        if (configEventBuilder_ == null) {
          if (eventTypeCase_ == 2) {
            return (org.opencord.voltha.events.Events.ConfigEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
        } else {
          if (eventTypeCase_ == 2) {
            return configEventBuilder_.getMessage();
          }
          return org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public Builder setConfigEvent(org.opencord.voltha.events.Events.ConfigEvent value) {
        if (configEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventType_ = value;
          onChanged();
        } else {
          configEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public Builder setConfigEvent(
          org.opencord.voltha.events.Events.ConfigEvent.Builder builderForValue) {
        if (configEventBuilder_ == null) {
          eventType_ = builderForValue.build();
          onChanged();
        } else {
          configEventBuilder_.setMessage(builderForValue.build());
        }
        eventTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public Builder mergeConfigEvent(org.opencord.voltha.events.Events.ConfigEvent value) {
        if (configEventBuilder_ == null) {
          if (eventTypeCase_ == 2 &&
              eventType_ != org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance()) {
            eventType_ = org.opencord.voltha.events.Events.ConfigEvent.newBuilder((org.opencord.voltha.events.Events.ConfigEvent) eventType_)
                .mergeFrom(value).buildPartial();
          } else {
            eventType_ = value;
          }
          onChanged();
        } else {
          if (eventTypeCase_ == 2) {
            configEventBuilder_.mergeFrom(value);
          }
          configEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public Builder clearConfigEvent() {
        if (configEventBuilder_ == null) {
          if (eventTypeCase_ == 2) {
            eventTypeCase_ = 0;
            eventType_ = null;
            onChanged();
          }
        } else {
          if (eventTypeCase_ == 2) {
            eventTypeCase_ = 0;
            eventType_ = null;
          }
          configEventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public org.opencord.voltha.events.Events.ConfigEvent.Builder getConfigEventBuilder() {
        return getConfigEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      public org.opencord.voltha.events.Events.ConfigEventOrBuilder getConfigEventOrBuilder() {
        if ((eventTypeCase_ == 2) && (configEventBuilder_ != null)) {
          return configEventBuilder_.getMessageOrBuilder();
        } else {
          if (eventTypeCase_ == 2) {
            return (org.opencord.voltha.events.Events.ConfigEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to ConfigEvent
       * </pre>
       *
       * <code>.event.ConfigEvent config_event = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.ConfigEvent, org.opencord.voltha.events.Events.ConfigEvent.Builder, org.opencord.voltha.events.Events.ConfigEventOrBuilder> 
          getConfigEventFieldBuilder() {
        if (configEventBuilder_ == null) {
          if (!(eventTypeCase_ == 2)) {
            eventType_ = org.opencord.voltha.events.Events.ConfigEvent.getDefaultInstance();
          }
          configEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.ConfigEvent, org.opencord.voltha.events.Events.ConfigEvent.Builder, org.opencord.voltha.events.Events.ConfigEventOrBuilder>(
                  (org.opencord.voltha.events.Events.ConfigEvent) eventType_,
                  getParentForChildren(),
                  isClean());
          eventType_ = null;
        }
        eventTypeCase_ = 2;
        onChanged();;
        return configEventBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.KpiEvent, org.opencord.voltha.events.Events.KpiEvent.Builder, org.opencord.voltha.events.Events.KpiEventOrBuilder> kpiEventBuilder_;
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public boolean hasKpiEvent() {
        return eventTypeCase_ == 3;
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public org.opencord.voltha.events.Events.KpiEvent getKpiEvent() {
        if (kpiEventBuilder_ == null) {
          if (eventTypeCase_ == 3) {
            return (org.opencord.voltha.events.Events.KpiEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
        } else {
          if (eventTypeCase_ == 3) {
            return kpiEventBuilder_.getMessage();
          }
          return org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public Builder setKpiEvent(org.opencord.voltha.events.Events.KpiEvent value) {
        if (kpiEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventType_ = value;
          onChanged();
        } else {
          kpiEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public Builder setKpiEvent(
          org.opencord.voltha.events.Events.KpiEvent.Builder builderForValue) {
        if (kpiEventBuilder_ == null) {
          eventType_ = builderForValue.build();
          onChanged();
        } else {
          kpiEventBuilder_.setMessage(builderForValue.build());
        }
        eventTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public Builder mergeKpiEvent(org.opencord.voltha.events.Events.KpiEvent value) {
        if (kpiEventBuilder_ == null) {
          if (eventTypeCase_ == 3 &&
              eventType_ != org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance()) {
            eventType_ = org.opencord.voltha.events.Events.KpiEvent.newBuilder((org.opencord.voltha.events.Events.KpiEvent) eventType_)
                .mergeFrom(value).buildPartial();
          } else {
            eventType_ = value;
          }
          onChanged();
        } else {
          if (eventTypeCase_ == 3) {
            kpiEventBuilder_.mergeFrom(value);
          }
          kpiEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public Builder clearKpiEvent() {
        if (kpiEventBuilder_ == null) {
          if (eventTypeCase_ == 3) {
            eventTypeCase_ = 0;
            eventType_ = null;
            onChanged();
          }
        } else {
          if (eventTypeCase_ == 3) {
            eventTypeCase_ = 0;
            eventType_ = null;
          }
          kpiEventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public org.opencord.voltha.events.Events.KpiEvent.Builder getKpiEventBuilder() {
        return getKpiEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      public org.opencord.voltha.events.Events.KpiEventOrBuilder getKpiEventOrBuilder() {
        if ((eventTypeCase_ == 3) && (kpiEventBuilder_ != null)) {
          return kpiEventBuilder_.getMessageOrBuilder();
        } else {
          if (eventTypeCase_ == 3) {
            return (org.opencord.voltha.events.Events.KpiEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to KpiEvent
       * </pre>
       *
       * <code>.event.KpiEvent kpi_event = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.KpiEvent, org.opencord.voltha.events.Events.KpiEvent.Builder, org.opencord.voltha.events.Events.KpiEventOrBuilder> 
          getKpiEventFieldBuilder() {
        if (kpiEventBuilder_ == null) {
          if (!(eventTypeCase_ == 3)) {
            eventType_ = org.opencord.voltha.events.Events.KpiEvent.getDefaultInstance();
          }
          kpiEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.KpiEvent, org.opencord.voltha.events.Events.KpiEvent.Builder, org.opencord.voltha.events.Events.KpiEventOrBuilder>(
                  (org.opencord.voltha.events.Events.KpiEvent) eventType_,
                  getParentForChildren(),
                  isClean());
          eventType_ = null;
        }
        eventTypeCase_ = 3;
        onChanged();;
        return kpiEventBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.KpiEvent2, org.opencord.voltha.events.Events.KpiEvent2.Builder, org.opencord.voltha.events.Events.KpiEvent2OrBuilder> kpiEvent2Builder_;
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public boolean hasKpiEvent2() {
        return eventTypeCase_ == 4;
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public org.opencord.voltha.events.Events.KpiEvent2 getKpiEvent2() {
        if (kpiEvent2Builder_ == null) {
          if (eventTypeCase_ == 4) {
            return (org.opencord.voltha.events.Events.KpiEvent2) eventType_;
          }
          return org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
        } else {
          if (eventTypeCase_ == 4) {
            return kpiEvent2Builder_.getMessage();
          }
          return org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public Builder setKpiEvent2(org.opencord.voltha.events.Events.KpiEvent2 value) {
        if (kpiEvent2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventType_ = value;
          onChanged();
        } else {
          kpiEvent2Builder_.setMessage(value);
        }
        eventTypeCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public Builder setKpiEvent2(
          org.opencord.voltha.events.Events.KpiEvent2.Builder builderForValue) {
        if (kpiEvent2Builder_ == null) {
          eventType_ = builderForValue.build();
          onChanged();
        } else {
          kpiEvent2Builder_.setMessage(builderForValue.build());
        }
        eventTypeCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public Builder mergeKpiEvent2(org.opencord.voltha.events.Events.KpiEvent2 value) {
        if (kpiEvent2Builder_ == null) {
          if (eventTypeCase_ == 4 &&
              eventType_ != org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance()) {
            eventType_ = org.opencord.voltha.events.Events.KpiEvent2.newBuilder((org.opencord.voltha.events.Events.KpiEvent2) eventType_)
                .mergeFrom(value).buildPartial();
          } else {
            eventType_ = value;
          }
          onChanged();
        } else {
          if (eventTypeCase_ == 4) {
            kpiEvent2Builder_.mergeFrom(value);
          }
          kpiEvent2Builder_.setMessage(value);
        }
        eventTypeCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public Builder clearKpiEvent2() {
        if (kpiEvent2Builder_ == null) {
          if (eventTypeCase_ == 4) {
            eventTypeCase_ = 0;
            eventType_ = null;
            onChanged();
          }
        } else {
          if (eventTypeCase_ == 4) {
            eventTypeCase_ = 0;
            eventType_ = null;
          }
          kpiEvent2Builder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public org.opencord.voltha.events.Events.KpiEvent2.Builder getKpiEvent2Builder() {
        return getKpiEvent2FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      public org.opencord.voltha.events.Events.KpiEvent2OrBuilder getKpiEvent2OrBuilder() {
        if ((eventTypeCase_ == 4) && (kpiEvent2Builder_ != null)) {
          return kpiEvent2Builder_.getMessageOrBuilder();
        } else {
          if (eventTypeCase_ == 4) {
            return (org.opencord.voltha.events.Events.KpiEvent2) eventType_;
          }
          return org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to KpiEvent2
       * </pre>
       *
       * <code>.event.KpiEvent2 kpi_event2 = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.KpiEvent2, org.opencord.voltha.events.Events.KpiEvent2.Builder, org.opencord.voltha.events.Events.KpiEvent2OrBuilder> 
          getKpiEvent2FieldBuilder() {
        if (kpiEvent2Builder_ == null) {
          if (!(eventTypeCase_ == 4)) {
            eventType_ = org.opencord.voltha.events.Events.KpiEvent2.getDefaultInstance();
          }
          kpiEvent2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.KpiEvent2, org.opencord.voltha.events.Events.KpiEvent2.Builder, org.opencord.voltha.events.Events.KpiEvent2OrBuilder>(
                  (org.opencord.voltha.events.Events.KpiEvent2) eventType_,
                  getParentForChildren(),
                  isClean());
          eventType_ = null;
        }
        eventTypeCase_ = 4;
        onChanged();;
        return kpiEvent2Builder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.DeviceEvent, org.opencord.voltha.events.Events.DeviceEvent.Builder, org.opencord.voltha.events.Events.DeviceEventOrBuilder> deviceEventBuilder_;
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public boolean hasDeviceEvent() {
        return eventTypeCase_ == 5;
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public org.opencord.voltha.events.Events.DeviceEvent getDeviceEvent() {
        if (deviceEventBuilder_ == null) {
          if (eventTypeCase_ == 5) {
            return (org.opencord.voltha.events.Events.DeviceEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
        } else {
          if (eventTypeCase_ == 5) {
            return deviceEventBuilder_.getMessage();
          }
          return org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public Builder setDeviceEvent(org.opencord.voltha.events.Events.DeviceEvent value) {
        if (deviceEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventType_ = value;
          onChanged();
        } else {
          deviceEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public Builder setDeviceEvent(
          org.opencord.voltha.events.Events.DeviceEvent.Builder builderForValue) {
        if (deviceEventBuilder_ == null) {
          eventType_ = builderForValue.build();
          onChanged();
        } else {
          deviceEventBuilder_.setMessage(builderForValue.build());
        }
        eventTypeCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public Builder mergeDeviceEvent(org.opencord.voltha.events.Events.DeviceEvent value) {
        if (deviceEventBuilder_ == null) {
          if (eventTypeCase_ == 5 &&
              eventType_ != org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance()) {
            eventType_ = org.opencord.voltha.events.Events.DeviceEvent.newBuilder((org.opencord.voltha.events.Events.DeviceEvent) eventType_)
                .mergeFrom(value).buildPartial();
          } else {
            eventType_ = value;
          }
          onChanged();
        } else {
          if (eventTypeCase_ == 5) {
            deviceEventBuilder_.mergeFrom(value);
          }
          deviceEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public Builder clearDeviceEvent() {
        if (deviceEventBuilder_ == null) {
          if (eventTypeCase_ == 5) {
            eventTypeCase_ = 0;
            eventType_ = null;
            onChanged();
          }
        } else {
          if (eventTypeCase_ == 5) {
            eventTypeCase_ = 0;
            eventType_ = null;
          }
          deviceEventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public org.opencord.voltha.events.Events.DeviceEvent.Builder getDeviceEventBuilder() {
        return getDeviceEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      public org.opencord.voltha.events.Events.DeviceEventOrBuilder getDeviceEventOrBuilder() {
        if ((eventTypeCase_ == 5) && (deviceEventBuilder_ != null)) {
          return deviceEventBuilder_.getMessageOrBuilder();
        } else {
          if (eventTypeCase_ == 5) {
            return (org.opencord.voltha.events.Events.DeviceEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to DeviceEvent
       * </pre>
       *
       * <code>.event.DeviceEvent device_event = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.DeviceEvent, org.opencord.voltha.events.Events.DeviceEvent.Builder, org.opencord.voltha.events.Events.DeviceEventOrBuilder> 
          getDeviceEventFieldBuilder() {
        if (deviceEventBuilder_ == null) {
          if (!(eventTypeCase_ == 5)) {
            eventType_ = org.opencord.voltha.events.Events.DeviceEvent.getDefaultInstance();
          }
          deviceEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.DeviceEvent, org.opencord.voltha.events.Events.DeviceEvent.Builder, org.opencord.voltha.events.Events.DeviceEventOrBuilder>(
                  (org.opencord.voltha.events.Events.DeviceEvent) eventType_,
                  getParentForChildren(),
                  isClean());
          eventType_ = null;
        }
        eventTypeCase_ = 5;
        onChanged();;
        return deviceEventBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.RPCEvent, org.opencord.voltha.events.Events.RPCEvent.Builder, org.opencord.voltha.events.Events.RPCEventOrBuilder> rpcEventBuilder_;
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public boolean hasRpcEvent() {
        return eventTypeCase_ == 6;
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public org.opencord.voltha.events.Events.RPCEvent getRpcEvent() {
        if (rpcEventBuilder_ == null) {
          if (eventTypeCase_ == 6) {
            return (org.opencord.voltha.events.Events.RPCEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
        } else {
          if (eventTypeCase_ == 6) {
            return rpcEventBuilder_.getMessage();
          }
          return org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public Builder setRpcEvent(org.opencord.voltha.events.Events.RPCEvent value) {
        if (rpcEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventType_ = value;
          onChanged();
        } else {
          rpcEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public Builder setRpcEvent(
          org.opencord.voltha.events.Events.RPCEvent.Builder builderForValue) {
        if (rpcEventBuilder_ == null) {
          eventType_ = builderForValue.build();
          onChanged();
        } else {
          rpcEventBuilder_.setMessage(builderForValue.build());
        }
        eventTypeCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public Builder mergeRpcEvent(org.opencord.voltha.events.Events.RPCEvent value) {
        if (rpcEventBuilder_ == null) {
          if (eventTypeCase_ == 6 &&
              eventType_ != org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance()) {
            eventType_ = org.opencord.voltha.events.Events.RPCEvent.newBuilder((org.opencord.voltha.events.Events.RPCEvent) eventType_)
                .mergeFrom(value).buildPartial();
          } else {
            eventType_ = value;
          }
          onChanged();
        } else {
          if (eventTypeCase_ == 6) {
            rpcEventBuilder_.mergeFrom(value);
          }
          rpcEventBuilder_.setMessage(value);
        }
        eventTypeCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public Builder clearRpcEvent() {
        if (rpcEventBuilder_ == null) {
          if (eventTypeCase_ == 6) {
            eventTypeCase_ = 0;
            eventType_ = null;
            onChanged();
          }
        } else {
          if (eventTypeCase_ == 6) {
            eventTypeCase_ = 0;
            eventType_ = null;
          }
          rpcEventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public org.opencord.voltha.events.Events.RPCEvent.Builder getRpcEventBuilder() {
        return getRpcEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      public org.opencord.voltha.events.Events.RPCEventOrBuilder getRpcEventOrBuilder() {
        if ((eventTypeCase_ == 6) && (rpcEventBuilder_ != null)) {
          return rpcEventBuilder_.getMessageOrBuilder();
        } else {
          if (eventTypeCase_ == 6) {
            return (org.opencord.voltha.events.Events.RPCEvent) eventType_;
          }
          return org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Refers to an RPC Event
       * </pre>
       *
       * <code>.event.RPCEvent rpc_event = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.opencord.voltha.events.Events.RPCEvent, org.opencord.voltha.events.Events.RPCEvent.Builder, org.opencord.voltha.events.Events.RPCEventOrBuilder> 
          getRpcEventFieldBuilder() {
        if (rpcEventBuilder_ == null) {
          if (!(eventTypeCase_ == 6)) {
            eventType_ = org.opencord.voltha.events.Events.RPCEvent.getDefaultInstance();
          }
          rpcEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.opencord.voltha.events.Events.RPCEvent, org.opencord.voltha.events.Events.RPCEvent.Builder, org.opencord.voltha.events.Events.RPCEventOrBuilder>(
                  (org.opencord.voltha.events.Events.RPCEvent) eventType_,
                  getParentForChildren(),
                  isClean());
          eventType_ = null;
        }
        eventTypeCase_ = 6;
        onChanged();;
        return rpcEventBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event.Event)
    }

    // @@protoc_insertion_point(class_scope:event.Event)
    private static final org.opencord.voltha.events.Events.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.opencord.voltha.events.Events.Event();
    }

    public static org.opencord.voltha.events.Events.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      @java.lang.Override
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.opencord.voltha.events.Events.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventFilterRuleKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventFilterRuleKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventFilterRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventFilterRule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventFilters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventFilters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_ConfigEventType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_ConfigEventType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_ConfigEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_ConfigEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_KpiEventType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_KpiEventType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_MetricMetaData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_MetricMetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_MetricMetaData_ContextEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_MetricMetaData_ContextEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_MetricValuePairs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_MetricValuePairs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_MetricValuePairs_MetricsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_MetricValuePairs_MetricsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_MetricInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_MetricInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_MetricInformation_MetricsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_MetricInformation_MetricsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_KpiEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_KpiEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_KpiEvent_PrefixesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_KpiEvent_PrefixesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_KpiEvent2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_KpiEvent2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_DeviceEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_DeviceEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_DeviceEvent_ContextEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_DeviceEvent_ContextEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_RPCEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_RPCEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_RPCEvent_ContextEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_RPCEvent_ContextEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventCategory_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventCategory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventSubCategory_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventSubCategory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_EventHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_EventHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_Event_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032voltha_protos/events.proto\022\005event\032\034goo" +
      "gle/api/annotations.proto\032\037google/protob" +
      "uf/timestamp.proto\032\032voltha_protos/common" +
      ".proto\"\236\001\n\022EventFilterRuleKey\"\207\001\n\023EventF" +
      "ilterRuleType\022\016\n\nfilter_all\020\000\022\014\n\010categor" +
      "y\020\001\022\020\n\014sub_category\020\002\022\022\n\016kpi_event_type\020" +
      "\003\022\025\n\021config_event_type\020\004\022\025\n\021device_event" +
      "_type\020\005\"\\\n\017EventFilterRule\022:\n\003key\030\001 \001(\0162" +
      "-.event.EventFilterRuleKey.EventFilterRu" +
      "leType\022\r\n\005value\030\002 \001(\t\"w\n\013EventFilter\022\n\n\002" +
      "id\030\001 \001(\t\022\016\n\006enable\030\002 \001(\010\022\021\n\tdevice_id\030\003 " +
      "\001(\t\022\022\n\nevent_type\030\004 \001(\t\022%\n\005rules\030\005 \003(\0132\026" +
      ".event.EventFilterRule\"3\n\014EventFilters\022#" +
      "\n\007filters\030\001 \003(\0132\022.event.EventFilter\";\n\017C" +
      "onfigEventType\"(\n\005Types\022\007\n\003add\020\000\022\n\n\006remo" +
      "ve\020\001\022\n\n\006update\020\002\"U\n\013ConfigEvent\022*\n\004type\030" +
      "\001 \001(\0162\034.event.ConfigEventType.Types\022\014\n\004h" +
      "ash\030\002 \001(\t\022\014\n\004data\030\003 \001(\t\"*\n\014KpiEventType\"" +
      "\032\n\005Types\022\t\n\005slice\020\000\022\006\n\002ts\020\001\"\337\001\n\016MetricMe" +
      "taData\022\r\n\005title\030\001 \001(\t\022\n\n\002ts\030\002 \001(\001\022\031\n\021log" +
      "ical_device_id\030\003 \001(\t\022\021\n\tserial_no\030\004 \001(\t\022" +
      "\021\n\tdevice_id\030\005 \001(\t\0223\n\007context\030\006 \003(\0132\".ev" +
      "ent.MetricMetaData.ContextEntry\022\014\n\004uuid\030" +
      "\007 \001(\t\032.\n\014ContextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va" +
      "lue\030\002 \001(\t:\0028\001\"y\n\020MetricValuePairs\0225\n\007met" +
      "rics\030\001 \003(\0132$.event.MetricValuePairs.Metr" +
      "icsEntry\032.\n\014MetricsEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
      "\005value\030\002 \001(\002:\0028\001\"\244\001\n\021MetricInformation\022\'" +
      "\n\010metadata\030\001 \001(\0132\025.event.MetricMetaData\022" +
      "6\n\007metrics\030\002 \003(\0132%.event.MetricInformati" +
      "on.MetricsEntry\032.\n\014MetricsEntry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001\"\272\001\n\010KpiEvent\022\'\n\004" +
      "type\030\001 \001(\0162\031.event.KpiEventType.Types\022\n\n" +
      "\002ts\030\002 \001(\002\022/\n\010prefixes\030\003 \003(\0132\035.event.KpiE" +
      "vent.PrefixesEntry\032H\n\rPrefixesEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.event.MetricVa" +
      "luePairs:\0028\001\"n\n\tKpiEvent2\022\'\n\004type\030\001 \001(\0162" +
      "\031.event.KpiEventType.Types\022\n\n\002ts\030\002 \001(\001\022," +
      "\n\nslice_data\030\003 \003(\0132\030.event.MetricInforma" +
      "tion\"\264\001\n\013DeviceEvent\022\023\n\013resource_id\030\001 \001(" +
      "\t\022\031\n\021device_event_name\030\002 \001(\t\022\023\n\013descript" +
      "ion\030\003 \001(\t\0220\n\007context\030\004 \003(\0132\037.event.Devic" +
      "eEvent.ContextEntry\032.\n\014ContextEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\200\002\n\010RPCEvent" +
      "\022\013\n\003rpc\030\001 \001(\t\022\024\n\014operation_id\030\002 \001(\t\022\017\n\007s" +
      "ervice\030\003 \001(\t\022\020\n\010stack_id\030\004 \001(\t\022\023\n\013resour" +
      "ce_id\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022-\n\007cont" +
      "ext\030\007 \003(\0132\034.event.RPCEvent.ContextEntry\022" +
      "%\n\006status\030\010 \001(\0132\025.common.OperationResp\032." +
      "\n\014ContextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\t:\0028\001\"v\n\rEventCategory\"e\n\005Types\022\021\n\rCOMM" +
      "UNICATION\020\000\022\017\n\013ENVIRONMENT\020\001\022\r\n\tEQUIPMEN" +
      "T\020\002\022\013\n\007SERVICE\020\003\022\016\n\nPROCESSING\020\004\022\014\n\010SECU" +
      "RITY\020\005\"R\n\020EventSubCategory\">\n\005Types\022\007\n\003P" +
      "ON\020\000\022\007\n\003OLT\020\001\022\007\n\003ONT\020\002\022\007\n\003ONU\020\003\022\007\n\003NNI\020\004" +
      "\022\010\n\004NONE\020\005\"f\n\tEventType\"Y\n\005Types\022\020\n\014CONF" +
      "IG_EVENT\020\000\022\r\n\tKPI_EVENT\020\001\022\016\n\nKPI_EVENT2\020" +
      "\002\022\020\n\014DEVICE_EVENT\020\003\022\r\n\tRPC_EVENT\020\004\"\230\002\n\013E" +
      "ventHeader\022\n\n\002id\030\001 \001(\t\022,\n\010category\030\002 \001(\016" +
      "2\032.event.EventCategory.Types\0223\n\014sub_cate" +
      "gory\030\003 \001(\0162\035.event.EventSubCategory.Type" +
      "s\022$\n\004type\030\004 \001(\0162\026.event.EventType.Types\022" +
      "\024\n\014type_version\030\005 \001(\t\022-\n\traised_ts\030\006 \001(\013" +
      "2\032.google.protobuf.Timestamp\022/\n\013reported" +
      "_ts\030\007 \001(\0132\032.google.protobuf.Timestamp\"\205\002" +
      "\n\005Event\022\"\n\006header\030\001 \001(\0132\022.event.EventHea" +
      "der\022*\n\014config_event\030\002 \001(\0132\022.event.Config" +
      "EventH\000\022$\n\tkpi_event\030\003 \001(\0132\017.event.KpiEv" +
      "entH\000\022&\n\nkpi_event2\030\004 \001(\0132\020.event.KpiEve" +
      "nt2H\000\022*\n\014device_event\030\005 \001(\0132\022.event.Devi" +
      "ceEventH\000\022$\n\trpc_event\030\006 \001(\0132\017.event.RPC" +
      "EventH\000B\014\n\nevent_typeBL\n\032org.opencord.vo" +
      "ltha.eventsZ.github.com/opencord/voltha-" +
      "protos/v5/go/volthab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          org.opencord.voltha.Common.getDescriptor(),
        }, assigner);
    internal_static_event_EventFilterRuleKey_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_EventFilterRuleKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventFilterRuleKey_descriptor,
        new java.lang.String[] { });
    internal_static_event_EventFilterRule_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_event_EventFilterRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventFilterRule_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_EventFilter_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_event_EventFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventFilter_descriptor,
        new java.lang.String[] { "Id", "Enable", "DeviceId", "EventType", "Rules", });
    internal_static_event_EventFilters_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_event_EventFilters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventFilters_descriptor,
        new java.lang.String[] { "Filters", });
    internal_static_event_ConfigEventType_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_event_ConfigEventType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_ConfigEventType_descriptor,
        new java.lang.String[] { });
    internal_static_event_ConfigEvent_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_event_ConfigEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_ConfigEvent_descriptor,
        new java.lang.String[] { "Type", "Hash", "Data", });
    internal_static_event_KpiEventType_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_event_KpiEventType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_KpiEventType_descriptor,
        new java.lang.String[] { });
    internal_static_event_MetricMetaData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_event_MetricMetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_MetricMetaData_descriptor,
        new java.lang.String[] { "Title", "Ts", "LogicalDeviceId", "SerialNo", "DeviceId", "Context", "Uuid", });
    internal_static_event_MetricMetaData_ContextEntry_descriptor =
      internal_static_event_MetricMetaData_descriptor.getNestedTypes().get(0);
    internal_static_event_MetricMetaData_ContextEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_MetricMetaData_ContextEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_MetricValuePairs_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_event_MetricValuePairs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_MetricValuePairs_descriptor,
        new java.lang.String[] { "Metrics", });
    internal_static_event_MetricValuePairs_MetricsEntry_descriptor =
      internal_static_event_MetricValuePairs_descriptor.getNestedTypes().get(0);
    internal_static_event_MetricValuePairs_MetricsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_MetricValuePairs_MetricsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_MetricInformation_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_event_MetricInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_MetricInformation_descriptor,
        new java.lang.String[] { "Metadata", "Metrics", });
    internal_static_event_MetricInformation_MetricsEntry_descriptor =
      internal_static_event_MetricInformation_descriptor.getNestedTypes().get(0);
    internal_static_event_MetricInformation_MetricsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_MetricInformation_MetricsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_KpiEvent_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_event_KpiEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_KpiEvent_descriptor,
        new java.lang.String[] { "Type", "Ts", "Prefixes", });
    internal_static_event_KpiEvent_PrefixesEntry_descriptor =
      internal_static_event_KpiEvent_descriptor.getNestedTypes().get(0);
    internal_static_event_KpiEvent_PrefixesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_KpiEvent_PrefixesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_KpiEvent2_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_event_KpiEvent2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_KpiEvent2_descriptor,
        new java.lang.String[] { "Type", "Ts", "SliceData", });
    internal_static_event_DeviceEvent_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_event_DeviceEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_DeviceEvent_descriptor,
        new java.lang.String[] { "ResourceId", "DeviceEventName", "Description", "Context", });
    internal_static_event_DeviceEvent_ContextEntry_descriptor =
      internal_static_event_DeviceEvent_descriptor.getNestedTypes().get(0);
    internal_static_event_DeviceEvent_ContextEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_DeviceEvent_ContextEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_RPCEvent_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_event_RPCEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_RPCEvent_descriptor,
        new java.lang.String[] { "Rpc", "OperationId", "Service", "StackId", "ResourceId", "Description", "Context", "Status", });
    internal_static_event_RPCEvent_ContextEntry_descriptor =
      internal_static_event_RPCEvent_descriptor.getNestedTypes().get(0);
    internal_static_event_RPCEvent_ContextEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_RPCEvent_ContextEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_event_EventCategory_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_event_EventCategory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventCategory_descriptor,
        new java.lang.String[] { });
    internal_static_event_EventSubCategory_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_event_EventSubCategory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventSubCategory_descriptor,
        new java.lang.String[] { });
    internal_static_event_EventType_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_event_EventType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventType_descriptor,
        new java.lang.String[] { });
    internal_static_event_EventHeader_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_event_EventHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_EventHeader_descriptor,
        new java.lang.String[] { "Id", "Category", "SubCategory", "Type", "TypeVersion", "RaisedTs", "ReportedTs", });
    internal_static_event_Event_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_event_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_Event_descriptor,
        new java.lang.String[] { "Header", "ConfigEvent", "KpiEvent", "KpiEvent2", "DeviceEvent", "RpcEvent", "EventType", });
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    org.opencord.voltha.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
