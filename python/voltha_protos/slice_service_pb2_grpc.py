# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from voltha_protos import slice_service_pb2 as voltha__protos_dot_slice__service__pb2


class SliceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddSliceGroup = channel.unary_unary(
                '/onossliceservice.SliceService/AddSliceGroup',
                request_serializer=voltha__protos_dot_slice__service__pb2.AddSliceGroupRequest.SerializeToString,
                response_deserializer=voltha__protos_dot_slice__service__pb2.AddSliceGroupResponse.FromString,
                )
        self.AddSlice = channel.unary_unary(
                '/onossliceservice.SliceService/AddSlice',
                request_serializer=voltha__protos_dot_slice__service__pb2.AddSliceRequest.SerializeToString,
                response_deserializer=voltha__protos_dot_slice__service__pb2.AddSliceResponse.FromString,
                )
        self.DeviceReport = channel.unary_stream(
                '/onossliceservice.SliceService/DeviceReport',
                request_serializer=voltha__protos_dot_slice__service__pb2.DeviceStatusRequest.SerializeToString,
                response_deserializer=voltha__protos_dot_slice__service__pb2.DeviceStatusResponse.FromString,
                )
        self.GetETCD = channel.unary_unary(
                '/onossliceservice.SliceService/GetETCD',
                request_serializer=voltha__protos_dot_slice__service__pb2.GetETCDRequest.SerializeToString,
                response_deserializer=voltha__protos_dot_slice__service__pb2.GetETCDResponse.FromString,
                )


class SliceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddSliceGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSlice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeviceReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetETCD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SliceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddSliceGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSliceGroup,
                    request_deserializer=voltha__protos_dot_slice__service__pb2.AddSliceGroupRequest.FromString,
                    response_serializer=voltha__protos_dot_slice__service__pb2.AddSliceGroupResponse.SerializeToString,
            ),
            'AddSlice': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSlice,
                    request_deserializer=voltha__protos_dot_slice__service__pb2.AddSliceRequest.FromString,
                    response_serializer=voltha__protos_dot_slice__service__pb2.AddSliceResponse.SerializeToString,
            ),
            'DeviceReport': grpc.unary_stream_rpc_method_handler(
                    servicer.DeviceReport,
                    request_deserializer=voltha__protos_dot_slice__service__pb2.DeviceStatusRequest.FromString,
                    response_serializer=voltha__protos_dot_slice__service__pb2.DeviceStatusResponse.SerializeToString,
            ),
            'GetETCD': grpc.unary_unary_rpc_method_handler(
                    servicer.GetETCD,
                    request_deserializer=voltha__protos_dot_slice__service__pb2.GetETCDRequest.FromString,
                    response_serializer=voltha__protos_dot_slice__service__pb2.GetETCDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'onossliceservice.SliceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SliceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddSliceGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onossliceservice.SliceService/AddSliceGroup',
            voltha__protos_dot_slice__service__pb2.AddSliceGroupRequest.SerializeToString,
            voltha__protos_dot_slice__service__pb2.AddSliceGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSlice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onossliceservice.SliceService/AddSlice',
            voltha__protos_dot_slice__service__pb2.AddSliceRequest.SerializeToString,
            voltha__protos_dot_slice__service__pb2.AddSliceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeviceReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/onossliceservice.SliceService/DeviceReport',
            voltha__protos_dot_slice__service__pb2.DeviceStatusRequest.SerializeToString,
            voltha__protos_dot_slice__service__pb2.DeviceStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetETCD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onossliceservice.SliceService/GetETCD',
            voltha__protos_dot_slice__service__pb2.GetETCDRequest.SerializeToString,
            voltha__protos_dot_slice__service__pb2.GetETCDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
